

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Aug 25 12:49:31 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,space=0,delta=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 26/03/2025 GMT
    24                           ; 
    25                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0004                     fsr             equ	4
    58     0004                     fsr0            equ	4
    59     0000                     indf            equ	0
    60     0000                     indf0           equ	0
    61     0002                     pc              equ	2
    62     0002                     pcl             equ	2
    63     000A                     pclath          equ	10
    64     0003                     status          equ	3
    65     0000                     INDF            equ	0	;# 
    66     0001                     TMR0            equ	1	;# 
    67     0002                     PCL             equ	2	;# 
    68     0003                     STATUS          equ	3	;# 
    69     0004                     FSR             equ	4	;# 
    70     0005                     PORTA           equ	5	;# 
    71     0006                     PORTB           equ	6	;# 
    72     0007                     PORTC           equ	7	;# 
    73     0008                     PORTD           equ	8	;# 
    74     0009                     PORTE           equ	9	;# 
    75     000A                     PCLATH          equ	10	;# 
    76     000B                     INTCON          equ	11	;# 
    77     000C                     PIR1            equ	12	;# 
    78     000D                     PIR2            equ	13	;# 
    79     000E                     TMR1            equ	14	;# 
    80     000E                     TMR1L           equ	14	;# 
    81     000F                     TMR1H           equ	15	;# 
    82     0010                     T1CON           equ	16	;# 
    83     0011                     TMR2            equ	17	;# 
    84     0012                     T2CON           equ	18	;# 
    85     0013                     SSPBUF          equ	19	;# 
    86     0014                     SSPCON          equ	20	;# 
    87     0015                     CCPR1           equ	21	;# 
    88     0015                     CCPR1L          equ	21	;# 
    89     0016                     CCPR1H          equ	22	;# 
    90     0017                     CCP1CON         equ	23	;# 
    91     0018                     RCSTA           equ	24	;# 
    92     0019                     TXREG           equ	25	;# 
    93     001A                     RCREG           equ	26	;# 
    94     001B                     CCPR2           equ	27	;# 
    95     001B                     CCPR2L          equ	27	;# 
    96     001C                     CCPR2H          equ	28	;# 
    97     001D                     CCP2CON         equ	29	;# 
    98     001E                     ADRESH          equ	30	;# 
    99     001F                     ADCON0          equ	31	;# 
   100     0081                     OPTION_REG      equ	129	;# 
   101     0085                     TRISA           equ	133	;# 
   102     0086                     TRISB           equ	134	;# 
   103     0087                     TRISC           equ	135	;# 
   104     0088                     TRISD           equ	136	;# 
   105     0089                     TRISE           equ	137	;# 
   106     008C                     PIE1            equ	140	;# 
   107     008D                     PIE2            equ	141	;# 
   108     008E                     PCON            equ	142	;# 
   109     0091                     SSPCON2         equ	145	;# 
   110     0092                     PR2             equ	146	;# 
   111     0093                     SSPADD          equ	147	;# 
   112     0094                     SSPSTAT         equ	148	;# 
   113     0098                     TXSTA           equ	152	;# 
   114     0099                     SPBRG           equ	153	;# 
   115     009E                     ADRESL          equ	158	;# 
   116     009F                     ADCON1          equ	159	;# 
   117     010C                     EEDATA          equ	268	;# 
   118     010D                     EEADR           equ	269	;# 
   119     010E                     EEDATH          equ	270	;# 
   120     010F                     EEADRH          equ	271	;# 
   121     018C                     EECON1          equ	396	;# 
   122     018D                     EECON2          equ	397	;# 
   123     0000                     INDF            equ	0	;# 
   124     0001                     TMR0            equ	1	;# 
   125     0002                     PCL             equ	2	;# 
   126     0003                     STATUS          equ	3	;# 
   127     0004                     FSR             equ	4	;# 
   128     0005                     PORTA           equ	5	;# 
   129     0006                     PORTB           equ	6	;# 
   130     0007                     PORTC           equ	7	;# 
   131     0008                     PORTD           equ	8	;# 
   132     0009                     PORTE           equ	9	;# 
   133     000A                     PCLATH          equ	10	;# 
   134     000B                     INTCON          equ	11	;# 
   135     000C                     PIR1            equ	12	;# 
   136     000D                     PIR2            equ	13	;# 
   137     000E                     TMR1            equ	14	;# 
   138     000E                     TMR1L           equ	14	;# 
   139     000F                     TMR1H           equ	15	;# 
   140     0010                     T1CON           equ	16	;# 
   141     0011                     TMR2            equ	17	;# 
   142     0012                     T2CON           equ	18	;# 
   143     0013                     SSPBUF          equ	19	;# 
   144     0014                     SSPCON          equ	20	;# 
   145     0015                     CCPR1           equ	21	;# 
   146     0015                     CCPR1L          equ	21	;# 
   147     0016                     CCPR1H          equ	22	;# 
   148     0017                     CCP1CON         equ	23	;# 
   149     0018                     RCSTA           equ	24	;# 
   150     0019                     TXREG           equ	25	;# 
   151     001A                     RCREG           equ	26	;# 
   152     001B                     CCPR2           equ	27	;# 
   153     001B                     CCPR2L          equ	27	;# 
   154     001C                     CCPR2H          equ	28	;# 
   155     001D                     CCP2CON         equ	29	;# 
   156     001E                     ADRESH          equ	30	;# 
   157     001F                     ADCON0          equ	31	;# 
   158     0081                     OPTION_REG      equ	129	;# 
   159     0085                     TRISA           equ	133	;# 
   160     0086                     TRISB           equ	134	;# 
   161     0087                     TRISC           equ	135	;# 
   162     0088                     TRISD           equ	136	;# 
   163     0089                     TRISE           equ	137	;# 
   164     008C                     PIE1            equ	140	;# 
   165     008D                     PIE2            equ	141	;# 
   166     008E                     PCON            equ	142	;# 
   167     0091                     SSPCON2         equ	145	;# 
   168     0092                     PR2             equ	146	;# 
   169     0093                     SSPADD          equ	147	;# 
   170     0094                     SSPSTAT         equ	148	;# 
   171     0098                     TXSTA           equ	152	;# 
   172     0099                     SPBRG           equ	153	;# 
   173     009E                     ADRESL          equ	158	;# 
   174     009F                     ADCON1          equ	159	;# 
   175     010C                     EEDATA          equ	268	;# 
   176     010D                     EEADR           equ	269	;# 
   177     010E                     EEDATH          equ	270	;# 
   178     010F                     EEADRH          equ	271	;# 
   179     018C                     EECON1          equ	396	;# 
   180     018D                     EECON2          equ	397	;# 
   181                           
   182                           	psect	strings
   183     051C                     __pstrings:
   184     051C                     stringtab:
   185     051C                     __stringtab:
   186     051C                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189     051C                     stringdir:
   190     051C  3005               	movlw	high stringdir
   191     051D  008A               	movwf	10
   192     051E  0804               	movf	4,w
   193     051F  0A84               	incf	4,f
   194     0520  0782               	addwf	2,f
   195     0521                     __stringbase:
   196     0521  3400               	retlw	0
   197     0522                     __end_of__stringtab:
   198     0522                     delay_100ms_and_poll_buttons@DEBOUNCE_THRESHOLD:
   199     0522  3403               	retlw	3
   200     0523                     __end_ofdelay_100ms_and_poll_buttons@DEBOUNCE_THRESHOLD:
   201     0006                     _PORTBbits      set	6
   202     0005                     _PORTAbits      set	5
   203     0008                     _PORTD          set	8
   204     0007                     _PORTC          set	7
   205     0005                     _PORTA          set	5
   206     005C                     _INTE           set	92
   207     005F                     _GIE            set	95
   208     0059                     _INTF           set	89
   209     0081                     _OPTION_REGbits set	129
   210     0086                     _TRISB          set	134
   211     0088                     _TRISD          set	136
   212     0087                     _TRISC          set	135
   213     0085                     _TRISA          set	133
   214     040E                     _INTEDG         set	1038
   215                           
   216                           	psect	cinit
   217     000F                     start_initialization:	
   218                           ; #config settings
   219                           
   220     000F                     __initialization:
   221                           
   222                           ; Clear objects allocated to COMMON
   223     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   224     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   225                           
   226                           ; Clear objects allocated to BANK0
   227     0011  1283               	bcf	3,5	;RP0=0, select bank0
   228     0012  1303               	bcf	3,6	;RP1=0, select bank0
   229     0013  01C4               	clrf	__pbssBANK0& (0+127)
   230     0014  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   231     0015  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   232     0016  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   233     0017  01C8               	clrf	(__pbssBANK0+4)& (0+127)
   234     0018  01C9               	clrf	(__pbssBANK0+5)& (0+127)
   235     0019  01CA               	clrf	(__pbssBANK0+6)& (0+127)
   236     001A  01CB               	clrf	(__pbssBANK0+7)& (0+127)
   237     001B                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240     001B                     __end_of__initialization:
   241     001B  0183               	clrf	3
   242     001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMMON
   245     007A                     __pbssCOMMON:
   246     007A                     delay_100ms_and_poll_buttons@rb1_count:
   247     007A                     	ds	1
   248     007B                     _int_debounce:
   249     007B                     	ds	1
   250                           
   251                           	psect	bssBANK0
   252     0044                     __pbssBANK0:
   253     0044                     delay_100ms_and_poll_buttons@int_deb_ctr:
   254     0044                     	ds	2
   255     0046                     _south_timer:
   256     0046                     	ds	2
   257     0048                     _west_timer:
   258     0048                     	ds	2
   259     004A                     _manual_active:
   260     004A                     	ds	1
   261     004B                     _systemMode:
   262     004B                     	ds	1
   263                           
   264                           	psect	cstackCOMMON
   265     0070                     __pcstackCOMMON:
   266     0070                     ?_reset_cycle_timers:
   267     0070                     ?_init_ports:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     ?_isr:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     ?_main:	
   274                           ; 1 bytes @ 0x0
   275                           
   276     0070                     ?i1_reset_cycle_timers:	
   277                           ; 1 bytes @ 0x0
   278                           
   279     0070                     ??_isr:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ??i1_reset_cycle_timers:	
   283                           ; 1 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287     0070                     	ds	2
   288     0072                     ?_set_lights:
   289     0072                     ?_delay_100ms_and_poll_buttons:	
   290                           ; 1 bytes @ 0x2
   291                           
   292     0072                     ?___awdiv:	
   293                           ; 1 bytes @ 0x2
   294                           
   295     0072                     ?___awmod:	
   296                           ; 2 bytes @ 0x2
   297                           
   298     0072                     set_lights@s_yel:	
   299                           ; 2 bytes @ 0x2
   300                           
   301     0072                     delay_100ms_and_poll_buttons@flag_p:	
   302                           ; 1 bytes @ 0x2
   303                           
   304     0072                     ___awdiv@divisor:	
   305                           ; 1 bytes @ 0x2
   306                           
   307     0072                     ___awmod@divisor:	
   308                           ; 2 bytes @ 0x2
   309                           
   310     0072                     ??_reset_cycle_timers:	
   311                           ; 2 bytes @ 0x2
   312                           
   313     0072                     ??_init_ports:	
   314                           ; 1 bytes @ 0x2
   315                           
   316                           
   317                           ; 1 bytes @ 0x2
   318     0072                     	ds	1
   319     0073                     set_lights@s_grn:
   320     0073                     ??_delay_100ms_and_poll_buttons:	
   321                           ; 1 bytes @ 0x3
   322                           
   323                           
   324                           ; 1 bytes @ 0x3
   325     0073                     	ds	1
   326     0074                     set_lights@w_red:
   327     0074                     ___awdiv@dividend:	
   328                           ; 1 bytes @ 0x4
   329                           
   330     0074                     ___awmod@dividend:	
   331                           ; 2 bytes @ 0x4
   332                           
   333                           
   334                           ; 2 bytes @ 0x4
   335     0074                     	ds	1
   336     0075                     set_lights@w_yel:
   337                           
   338                           ; 1 bytes @ 0x5
   339     0075                     	ds	1
   340     0076                     set_lights@w_grn:
   341     0076                     ___awdiv@counter:	
   342                           ; 1 bytes @ 0x6
   343                           
   344     0076                     ___awmod@counter:	
   345                           ; 1 bytes @ 0x6
   346                           
   347     0076                     ??___awdiv:	
   348                           ; 1 bytes @ 0x6
   349                           
   350     0076                     ??___awmod:	
   351                           ; 1 bytes @ 0x6
   352                           
   353                           
   354                           ; 1 bytes @ 0x6
   355     0076                     	ds	1
   356     0077                     set_lights@s_red:
   357     0077                     ___awdiv@sign:	
   358                           ; 1 bytes @ 0x7
   359                           
   360     0077                     ___awmod@sign:	
   361                           ; 1 bytes @ 0x7
   362                           
   363     0077                     ??_set_lights:	
   364                           ; 1 bytes @ 0x7
   365                           
   366                           
   367                           ; 1 bytes @ 0x7
   368     0077                     	ds	1
   369     0078                     ___awdiv@quotient:
   370                           
   371                           ; 2 bytes @ 0x8
   372     0078                     	ds	2
   373     007A                     ??_main:
   374                           
   375                           	psect	cstackBANK0
   376     0020                     __pcstackBANK0:	
   377                           ; 1 bytes @ 0xA
   378                           
   379     0020                     ?_update_displays:
   380     0020                     update_displays@south_seconds:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 2 bytes @ 0x0
   385     0020                     	ds	2
   386     0022                     update_displays@west_seconds:
   387                           
   388                           ; 2 bytes @ 0x2
   389     0022                     	ds	2
   390     0024                     ??_update_displays:
   391                           
   392                           ; 1 bytes @ 0x4
   393     0024                     	ds	2
   394     0026                     update_displays@s_tens:
   395                           
   396                           ; 1 bytes @ 0x6
   397     0026                     	ds	1
   398     0027                     update_displays@s_ones:
   399                           
   400                           ; 1 bytes @ 0x7
   401     0027                     	ds	1
   402     0028                     update_displays@w_tens:
   403                           
   404                           ; 1 bytes @ 0x8
   405     0028                     	ds	1
   406     0029                     update_displays@w_ones:
   407                           
   408                           ; 1 bytes @ 0x9
   409     0029                     	ds	1
   410     002A                     main@k:
   411                           
   412                           ; 2 bytes @ 0xA
   413     002A                     	ds	2
   414     002C                     main@k_154:
   415                           
   416                           ; 2 bytes @ 0xC
   417     002C                     	ds	2
   418     002E                     main@k_156:
   419                           
   420                           ; 2 bytes @ 0xE
   421     002E                     	ds	2
   422     0030                     main@k_158:
   423                           
   424                           ; 2 bytes @ 0x10
   425     0030                     	ds	2
   426     0032                     main@k_161:
   427                           
   428                           ; 2 bytes @ 0x12
   429     0032                     	ds	2
   430     0034                     main@k_164:
   431                           
   432                           ; 2 bytes @ 0x14
   433     0034                     	ds	2
   434     0036                     main@s_160:
   435                           
   436                           ; 2 bytes @ 0x16
   437     0036                     	ds	2
   438     0038                     main@s_163:
   439                           
   440                           ; 2 bytes @ 0x18
   441     0038                     	ds	2
   442     003A                     main@pressed:
   443                           
   444                           ; 1 bytes @ 0x1A
   445     003A                     	ds	1
   446     003B                     main@pressed_162:
   447                           
   448                           ; 1 bytes @ 0x1B
   449     003B                     	ds	1
   450     003C                     main@s:
   451                           
   452                           ; 2 bytes @ 0x1C
   453     003C                     	ds	2
   454     003E                     main@s_153:
   455                           
   456                           ; 2 bytes @ 0x1E
   457     003E                     	ds	2
   458     0040                     main@s_155:
   459                           
   460                           ; 2 bytes @ 0x20
   461     0040                     	ds	2
   462     0042                     main@s_157:
   463                           
   464                           ; 2 bytes @ 0x22
   465     0042                     	ds	2
   466                           
   467                           	psect	maintext
   468     001F                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 42 in file "Main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  k               2   20[BANK0 ] int 
   479 ;;  k               2   18[BANK0 ] int 
   480 ;;  s               2   24[BANK0 ] int 
   481 ;;  s               2   22[BANK0 ] int 
   482 ;;  k               2   16[BANK0 ] int 
   483 ;;  k               2   14[BANK0 ] int 
   484 ;;  k               2   12[BANK0 ] int 
   485 ;;  k               2   10[BANK0 ] int 
   486 ;;  pressed         1   27[BANK0 ] unsigned char 
   487 ;;  pressed         1   26[BANK0 ] unsigned char 
   488 ;;  s               2   34[BANK0 ] int 
   489 ;;  s               2   32[BANK0 ] int 
   490 ;;  s               2   30[BANK0 ] int 
   491 ;;  s               2   28[BANK0 ] int 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : B00/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   501 ;;      Params:         0       0       0       0       0
   502 ;;      Locals:         0      26       0       0       0
   503 ;;      Temps:          0       0       0       0       0
   504 ;;      Totals:         0      26       0       0       0
   505 ;;Total ram usage:       26 bytes
   506 ;; Hardware stack levels required when called: 4
   507 ;; This function calls:
   508 ;;		_delay_100ms_and_poll_buttons
   509 ;;		_init_ports
   510 ;;		_reset_cycle_timers
   511 ;;		_set_lights
   512 ;;		_update_displays
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518     001F                     _main:	
   519                           ;psect for function _main
   520                           
   521     001F                     l1468:	
   522                           ;incstack = 0
   523                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   524                           
   525                           
   526                           ;Main.c: 43:     init_ports();
   527     001F  120A  118A  24E9  120A  118A  	fcall	_init_ports
   528     0024                     l1470:
   529                           
   530                           ;Main.c: 44:     reset_cycle_timers();
   531     0024  120A  118A  2506  120A  118A  	fcall	_reset_cycle_timers
   532     0029                     l1472:
   533                           
   534                           ;Main.c: 47:         if(systemMode == MODE_AUTO) {
   535     0029  1283               	bcf	3,5	;RP0=0, select bank0
   536     002A  1303               	bcf	3,6	;RP1=0, select bank0
   537     002B  084B               	movf	_systemMode,w	;volatile
   538     002C  1D03               	btfss	3,2
   539     002D  282F               	goto	u1411
   540     002E  2830               	goto	u1410
   541     002F                     u1411:
   542     002F  29B4               	goto	l1590
   543     0030                     u1410:
   544     0030                     l1474:
   545                           
   546                           ;Main.c: 48:             set_lights(1, 0, 0,
   547     0030  01F2               	clrf	set_lights@s_yel
   548     0031  01F3               	clrf	set_lights@s_grn
   549     0032  01F4               	clrf	set_lights@w_red
   550     0033  01F5               	clrf	set_lights@w_yel
   551     0034  01F6               	clrf	set_lights@w_grn
   552     0035  0AF6               	incf	set_lights@w_grn,f
   553     0036  3001               	movlw	1
   554     0037  120A  118A  2482  120A  118A  	fcall	_set_lights
   555     003C                     l1476:
   556                           
   557                           ;Main.c: 50:             for (int s = 20; s > 0; --s) {
   558     003C  3014               	movlw	20
   559     003D  1283               	bcf	3,5	;RP0=0, select bank0
   560     003E  1303               	bcf	3,6	;RP1=0, select bank0
   561     003F  00BC               	movwf	main@s
   562     0040  3000               	movlw	0
   563     0041  00BD               	movwf	main@s+1
   564     0042                     l1482:
   565                           
   566                           ;Main.c: 51:                 west_timer = s;
   567     0042  1283               	bcf	3,5	;RP0=0, select bank0
   568     0043  1303               	bcf	3,6	;RP1=0, select bank0
   569     0044  083D               	movf	main@s+1,w
   570     0045  00C9               	movwf	_west_timer+1	;volatile
   571     0046  083C               	movf	main@s,w
   572     0047  00C8               	movwf	_west_timer	;volatile
   573     0048                     l1484:
   574                           
   575                           ;Main.c: 52:                 south_timer = s + 3;
   576     0048  083C               	movf	main@s,w
   577     0049  3E03               	addlw	3
   578     004A  00C6               	movwf	_south_timer	;volatile
   579     004B  083D               	movf	main@s+1,w
   580     004C  1803               	skipnc
   581     004D  3E01               	addlw	1
   582     004E  3E00               	addlw	0
   583     004F  00C7               	movwf	_south_timer+1	;volatile
   584     0050                     l1486:
   585                           
   586                           ;Main.c: 53:                 update_displays(south_timer, west_timer);
   587     0050  0847               	movf	_south_timer+1,w	;volatile
   588     0051  00A1               	movwf	update_displays@south_seconds+1
   589     0052  0846               	movf	_south_timer,w	;volatile
   590     0053  00A0               	movwf	update_displays@south_seconds
   591     0054  0849               	movf	_west_timer+1,w	;volatile
   592     0055  00A3               	movwf	update_displays@west_seconds+1
   593     0056  0848               	movf	_west_timer,w	;volatile
   594     0057  00A2               	movwf	update_displays@west_seconds
   595     0058  120A  118A  22E2  120A  118A  	fcall	_update_displays
   596     005D                     l1488:
   597                           
   598                           ;Main.c: 54:                 for (int k=0;k<10;k++) delay_100ms_and_poll_buttons(((void*
      +                          )0));
   599     005D  1283               	bcf	3,5	;RP0=0, select bank0
   600     005E  1303               	bcf	3,6	;RP1=0, select bank0
   601     005F  01AA               	clrf	main@k
   602     0060  01AB               	clrf	main@k+1
   603     0061                     l1494:
   604     0061  01F2               	clrf	delay_100ms_and_poll_buttons@flag_p
   605     0062  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
   606     0067                     l1496:
   607     0067  3001               	movlw	1
   608     0068  1283               	bcf	3,5	;RP0=0, select bank0
   609     0069  1303               	bcf	3,6	;RP1=0, select bank0
   610     006A  07AA               	addwf	main@k,f
   611     006B  1803               	skipnc
   612     006C  0AAB               	incf	main@k+1,f
   613     006D  3000               	movlw	0
   614     006E  07AB               	addwf	main@k+1,f
   615     006F                     l1498:
   616     006F  082B               	movf	main@k+1,w
   617     0070  3A80               	xorlw	128
   618     0071  00FF               	movwf	btemp+1
   619     0072  3080               	movlw	128
   620     0073  027F               	subwf	btemp+1,w
   621     0074  1D03               	skipz
   622     0075  2878               	goto	u1425
   623     0076  300A               	movlw	10
   624     0077  022A               	subwf	main@k,w
   625     0078                     u1425:
   626     0078  1C03               	skipc
   627     0079  287B               	goto	u1421
   628     007A  287C               	goto	u1420
   629     007B                     u1421:
   630     007B  2861               	goto	l1494
   631     007C                     u1420:
   632     007C                     l1500:
   633                           
   634                           ;Main.c: 55:             }
   635     007C  30FF               	movlw	255
   636     007D  1283               	bcf	3,5	;RP0=0, select bank0
   637     007E  1303               	bcf	3,6	;RP1=0, select bank0
   638     007F  07BC               	addwf	main@s,f
   639     0080  1803               	skipnc
   640     0081  0ABD               	incf	main@s+1,f
   641     0082  30FF               	movlw	255
   642     0083  07BD               	addwf	main@s+1,f
   643     0084                     l1502:
   644     0084  083D               	movf	main@s+1,w
   645     0085  3A80               	xorlw	128
   646     0086  00FF               	movwf	btemp+1
   647     0087  3080               	movlw	128
   648     0088  027F               	subwf	btemp+1,w
   649     0089  1D03               	skipz
   650     008A  288D               	goto	u1435
   651     008B  3001               	movlw	1
   652     008C  023C               	subwf	main@s,w
   653     008D                     u1435:
   654     008D  1803               	skipnc
   655     008E  2890               	goto	u1431
   656     008F  2891               	goto	u1430
   657     0090                     u1431:
   658     0090  2842               	goto	l1482
   659     0091                     u1430:
   660     0091                     l1504:
   661                           
   662                           ;Main.c: 57:             set_lights(1, 0, 0,
   663     0091  01F2               	clrf	set_lights@s_yel
   664     0092  01F3               	clrf	set_lights@s_grn
   665     0093  01F4               	clrf	set_lights@w_red
   666     0094  01F5               	clrf	set_lights@w_yel
   667     0095  0AF5               	incf	set_lights@w_yel,f
   668     0096  01F6               	clrf	set_lights@w_grn
   669     0097  3001               	movlw	1
   670     0098  120A  118A  2482  120A  118A  	fcall	_set_lights
   671     009D                     l1506:
   672                           
   673                           ;Main.c: 59:             for (int s = 3; s > 0; --s) {
   674     009D  3003               	movlw	3
   675     009E  1283               	bcf	3,5	;RP0=0, select bank0
   676     009F  1303               	bcf	3,6	;RP1=0, select bank0
   677     00A0  00BE               	movwf	main@s_153
   678     00A1  3000               	movlw	0
   679     00A2  00BF               	movwf	main@s_153+1
   680     00A3                     l1512:
   681                           
   682                           ;Main.c: 60:                 west_timer = s;
   683     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   684     00A4  1303               	bcf	3,6	;RP1=0, select bank0
   685     00A5  083F               	movf	main@s_153+1,w
   686     00A6  00C9               	movwf	_west_timer+1	;volatile
   687     00A7  083E               	movf	main@s_153,w
   688     00A8  00C8               	movwf	_west_timer	;volatile
   689                           
   690                           ;Main.c: 61:                 south_timer = s;
   691     00A9  083F               	movf	main@s_153+1,w
   692     00AA  00C7               	movwf	_south_timer+1	;volatile
   693     00AB  083E               	movf	main@s_153,w
   694     00AC  00C6               	movwf	_south_timer	;volatile
   695     00AD                     l1514:
   696                           
   697                           ;Main.c: 62:                 update_displays(south_timer, west_timer);
   698     00AD  0847               	movf	_south_timer+1,w	;volatile
   699     00AE  00A1               	movwf	update_displays@south_seconds+1
   700     00AF  0846               	movf	_south_timer,w	;volatile
   701     00B0  00A0               	movwf	update_displays@south_seconds
   702     00B1  0849               	movf	_west_timer+1,w	;volatile
   703     00B2  00A3               	movwf	update_displays@west_seconds+1
   704     00B3  0848               	movf	_west_timer,w	;volatile
   705     00B4  00A2               	movwf	update_displays@west_seconds
   706     00B5  120A  118A  22E2  120A  118A  	fcall	_update_displays
   707     00BA                     l1516:
   708                           
   709                           ;Main.c: 63:                 for (int k=0;k<10;k++) delay_100ms_and_poll_buttons(((void*
      +                          )0));
   710     00BA  1283               	bcf	3,5	;RP0=0, select bank0
   711     00BB  1303               	bcf	3,6	;RP1=0, select bank0
   712     00BC  01AC               	clrf	main@k_154
   713     00BD  01AD               	clrf	main@k_154+1
   714     00BE                     l1522:
   715     00BE  01F2               	clrf	delay_100ms_and_poll_buttons@flag_p
   716     00BF  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
   717     00C4                     l1524:
   718     00C4  3001               	movlw	1
   719     00C5  1283               	bcf	3,5	;RP0=0, select bank0
   720     00C6  1303               	bcf	3,6	;RP1=0, select bank0
   721     00C7  07AC               	addwf	main@k_154,f
   722     00C8  1803               	skipnc
   723     00C9  0AAD               	incf	main@k_154+1,f
   724     00CA  3000               	movlw	0
   725     00CB  07AD               	addwf	main@k_154+1,f
   726     00CC                     l1526:
   727     00CC  082D               	movf	main@k_154+1,w
   728     00CD  3A80               	xorlw	128
   729     00CE  00FF               	movwf	btemp+1
   730     00CF  3080               	movlw	128
   731     00D0  027F               	subwf	btemp+1,w
   732     00D1  1D03               	skipz
   733     00D2  28D5               	goto	u1445
   734     00D3  300A               	movlw	10
   735     00D4  022C               	subwf	main@k_154,w
   736     00D5                     u1445:
   737     00D5  1C03               	skipc
   738     00D6  28D8               	goto	u1441
   739     00D7  28D9               	goto	u1440
   740     00D8                     u1441:
   741     00D8  28BE               	goto	l1522
   742     00D9                     u1440:
   743     00D9                     l1528:
   744                           
   745                           ;Main.c: 64:             }
   746     00D9  30FF               	movlw	255
   747     00DA  1283               	bcf	3,5	;RP0=0, select bank0
   748     00DB  1303               	bcf	3,6	;RP1=0, select bank0
   749     00DC  07BE               	addwf	main@s_153,f
   750     00DD  1803               	skipnc
   751     00DE  0ABF               	incf	main@s_153+1,f
   752     00DF  30FF               	movlw	255
   753     00E0  07BF               	addwf	main@s_153+1,f
   754     00E1                     l1530:
   755     00E1  083F               	movf	main@s_153+1,w
   756     00E2  3A80               	xorlw	128
   757     00E3  00FF               	movwf	btemp+1
   758     00E4  3080               	movlw	128
   759     00E5  027F               	subwf	btemp+1,w
   760     00E6  1D03               	skipz
   761     00E7  28EA               	goto	u1455
   762     00E8  3001               	movlw	1
   763     00E9  023E               	subwf	main@s_153,w
   764     00EA                     u1455:
   765     00EA  1803               	skipnc
   766     00EB  28ED               	goto	u1451
   767     00EC  28EE               	goto	u1450
   768     00ED                     u1451:
   769     00ED  28A3               	goto	l1512
   770     00EE                     u1450:
   771     00EE                     l1532:
   772                           
   773                           ;Main.c: 66:             set_lights(0, 0, 1,
   774     00EE  01F2               	clrf	set_lights@s_yel
   775     00EF  01F3               	clrf	set_lights@s_grn
   776     00F0  0AF3               	incf	set_lights@s_grn,f
   777     00F1  01F4               	clrf	set_lights@w_red
   778     00F2  0AF4               	incf	set_lights@w_red,f
   779     00F3  01F5               	clrf	set_lights@w_yel
   780     00F4  01F6               	clrf	set_lights@w_grn
   781     00F5  3000               	movlw	0
   782     00F6  120A  118A  2482  120A  118A  	fcall	_set_lights
   783     00FB                     l1534:
   784                           
   785                           ;Main.c: 68:             for (int s = 12; s > 0; --s) {
   786     00FB  300C               	movlw	12
   787     00FC  1283               	bcf	3,5	;RP0=0, select bank0
   788     00FD  1303               	bcf	3,6	;RP1=0, select bank0
   789     00FE  00C0               	movwf	main@s_155
   790     00FF  3000               	movlw	0
   791     0100  00C1               	movwf	main@s_155+1
   792     0101                     l1540:
   793                           
   794                           ;Main.c: 69:                 south_timer = s;
   795     0101  1283               	bcf	3,5	;RP0=0, select bank0
   796     0102  1303               	bcf	3,6	;RP1=0, select bank0
   797     0103  0841               	movf	main@s_155+1,w
   798     0104  00C7               	movwf	_south_timer+1	;volatile
   799     0105  0840               	movf	main@s_155,w
   800     0106  00C6               	movwf	_south_timer	;volatile
   801     0107                     l1542:
   802                           
   803                           ;Main.c: 70:                 west_timer = s + 3;
   804     0107  0840               	movf	main@s_155,w
   805     0108  3E03               	addlw	3
   806     0109  00C8               	movwf	_west_timer	;volatile
   807     010A  0841               	movf	main@s_155+1,w
   808     010B  1803               	skipnc
   809     010C  3E01               	addlw	1
   810     010D  3E00               	addlw	0
   811     010E  00C9               	movwf	_west_timer+1	;volatile
   812     010F                     l1544:
   813                           
   814                           ;Main.c: 71:                 update_displays(south_timer, west_timer);
   815     010F  0847               	movf	_south_timer+1,w	;volatile
   816     0110  00A1               	movwf	update_displays@south_seconds+1
   817     0111  0846               	movf	_south_timer,w	;volatile
   818     0112  00A0               	movwf	update_displays@south_seconds
   819     0113  0849               	movf	_west_timer+1,w	;volatile
   820     0114  00A3               	movwf	update_displays@west_seconds+1
   821     0115  0848               	movf	_west_timer,w	;volatile
   822     0116  00A2               	movwf	update_displays@west_seconds
   823     0117  120A  118A  22E2  120A  118A  	fcall	_update_displays
   824     011C                     l1546:
   825                           
   826                           ;Main.c: 72:                 for (int k=0;k<10;k++) delay_100ms_and_poll_buttons(((void*
      +                          )0));
   827     011C  1283               	bcf	3,5	;RP0=0, select bank0
   828     011D  1303               	bcf	3,6	;RP1=0, select bank0
   829     011E  01AE               	clrf	main@k_156
   830     011F  01AF               	clrf	main@k_156+1
   831     0120                     l1548:
   832     0120  082F               	movf	main@k_156+1,w
   833     0121  3A80               	xorlw	128
   834     0122  00FF               	movwf	btemp+1
   835     0123  3080               	movlw	128
   836     0124  027F               	subwf	btemp+1,w
   837     0125  1D03               	skipz
   838     0126  2929               	goto	u1465
   839     0127  300A               	movlw	10
   840     0128  022E               	subwf	main@k_156,w
   841     0129                     u1465:
   842     0129  1C03               	skipc
   843     012A  292C               	goto	u1461
   844     012B  292D               	goto	u1460
   845     012C                     u1461:
   846     012C  292E               	goto	l1552
   847     012D                     u1460:
   848     012D  293D               	goto	l1558
   849     012E                     l1552:
   850     012E  01F2               	clrf	delay_100ms_and_poll_buttons@flag_p
   851     012F  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
   852     0134                     l1554:
   853     0134  3001               	movlw	1
   854     0135  1283               	bcf	3,5	;RP0=0, select bank0
   855     0136  1303               	bcf	3,6	;RP1=0, select bank0
   856     0137  07AE               	addwf	main@k_156,f
   857     0138  1803               	skipnc
   858     0139  0AAF               	incf	main@k_156+1,f
   859     013A  3000               	movlw	0
   860     013B  07AF               	addwf	main@k_156+1,f
   861     013C  2920               	goto	l1548
   862     013D                     l1558:
   863                           
   864                           ;Main.c: 73:             }
   865     013D  30FF               	movlw	255
   866     013E  1283               	bcf	3,5	;RP0=0, select bank0
   867     013F  1303               	bcf	3,6	;RP1=0, select bank0
   868     0140  07C0               	addwf	main@s_155,f
   869     0141  1803               	skipnc
   870     0142  0AC1               	incf	main@s_155+1,f
   871     0143  30FF               	movlw	255
   872     0144  07C1               	addwf	main@s_155+1,f
   873     0145                     l1560:
   874     0145  0841               	movf	main@s_155+1,w
   875     0146  3A80               	xorlw	128
   876     0147  00FF               	movwf	btemp+1
   877     0148  3080               	movlw	128
   878     0149  027F               	subwf	btemp+1,w
   879     014A  1D03               	skipz
   880     014B  294E               	goto	u1475
   881     014C  3001               	movlw	1
   882     014D  0240               	subwf	main@s_155,w
   883     014E                     u1475:
   884     014E  1803               	skipnc
   885     014F  2951               	goto	u1471
   886     0150  2952               	goto	u1470
   887     0151                     u1471:
   888     0151  2901               	goto	l1540
   889     0152                     u1470:
   890     0152                     l1562:
   891                           
   892                           ;Main.c: 75:             set_lights(0, 1, 0,
   893     0152  01F2               	clrf	set_lights@s_yel
   894     0153  0AF2               	incf	set_lights@s_yel,f
   895     0154  01F3               	clrf	set_lights@s_grn
   896     0155  01F4               	clrf	set_lights@w_red
   897     0156  0AF4               	incf	set_lights@w_red,f
   898     0157  01F5               	clrf	set_lights@w_yel
   899     0158  01F6               	clrf	set_lights@w_grn
   900     0159  3000               	movlw	0
   901     015A  120A  118A  2482  120A  118A  	fcall	_set_lights
   902     015F                     l1564:
   903                           
   904                           ;Main.c: 77:             for (int s = 3; s > 0; --s) {
   905     015F  3003               	movlw	3
   906     0160  1283               	bcf	3,5	;RP0=0, select bank0
   907     0161  1303               	bcf	3,6	;RP1=0, select bank0
   908     0162  00C2               	movwf	main@s_157
   909     0163  3000               	movlw	0
   910     0164  00C3               	movwf	main@s_157+1
   911     0165                     l1566:
   912     0165  0843               	movf	main@s_157+1,w
   913     0166  3A80               	xorlw	128
   914     0167  00FF               	movwf	btemp+1
   915     0168  3080               	movlw	128
   916     0169  027F               	subwf	btemp+1,w
   917     016A  1D03               	skipz
   918     016B  296E               	goto	u1485
   919     016C  3001               	movlw	1
   920     016D  0242               	subwf	main@s_157,w
   921     016E                     u1485:
   922     016E  1803               	skipnc
   923     016F  2971               	goto	u1481
   924     0170  2972               	goto	u1480
   925     0171                     u1481:
   926     0171  2973               	goto	l1570
   927     0172                     u1480:
   928     0172  2829               	goto	l1472
   929     0173                     l1570:
   930                           
   931                           ;Main.c: 78:                 south_timer = s;
   932     0173  1283               	bcf	3,5	;RP0=0, select bank0
   933     0174  1303               	bcf	3,6	;RP1=0, select bank0
   934     0175  0843               	movf	main@s_157+1,w
   935     0176  00C7               	movwf	_south_timer+1	;volatile
   936     0177  0842               	movf	main@s_157,w
   937     0178  00C6               	movwf	_south_timer	;volatile
   938                           
   939                           ;Main.c: 79:                 west_timer = s;
   940     0179  0843               	movf	main@s_157+1,w
   941     017A  00C9               	movwf	_west_timer+1	;volatile
   942     017B  0842               	movf	main@s_157,w
   943     017C  00C8               	movwf	_west_timer	;volatile
   944     017D                     l1572:
   945                           
   946                           ;Main.c: 80:                 update_displays(south_timer, west_timer);
   947     017D  0847               	movf	_south_timer+1,w	;volatile
   948     017E  00A1               	movwf	update_displays@south_seconds+1
   949     017F  0846               	movf	_south_timer,w	;volatile
   950     0180  00A0               	movwf	update_displays@south_seconds
   951     0181  0849               	movf	_west_timer+1,w	;volatile
   952     0182  00A3               	movwf	update_displays@west_seconds+1
   953     0183  0848               	movf	_west_timer,w	;volatile
   954     0184  00A2               	movwf	update_displays@west_seconds
   955     0185  120A  118A  22E2  120A  118A  	fcall	_update_displays
   956     018A                     l1574:
   957                           
   958                           ;Main.c: 81:                 for (int k=0;k<10;k++) delay_100ms_and_poll_buttons(((void*
      +                          )0));
   959     018A  1283               	bcf	3,5	;RP0=0, select bank0
   960     018B  1303               	bcf	3,6	;RP1=0, select bank0
   961     018C  01B0               	clrf	main@k_158
   962     018D  01B1               	clrf	main@k_158+1
   963     018E                     l1576:
   964     018E  0831               	movf	main@k_158+1,w
   965     018F  3A80               	xorlw	128
   966     0190  00FF               	movwf	btemp+1
   967     0191  3080               	movlw	128
   968     0192  027F               	subwf	btemp+1,w
   969     0193  1D03               	skipz
   970     0194  2997               	goto	u1495
   971     0195  300A               	movlw	10
   972     0196  0230               	subwf	main@k_158,w
   973     0197                     u1495:
   974     0197  1C03               	skipc
   975     0198  299A               	goto	u1491
   976     0199  299B               	goto	u1490
   977     019A                     u1491:
   978     019A  299C               	goto	l1580
   979     019B                     u1490:
   980     019B  29AB               	goto	l1586
   981     019C                     l1580:
   982     019C  01F2               	clrf	delay_100ms_and_poll_buttons@flag_p
   983     019D  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
   984     01A2                     l1582:
   985     01A2  3001               	movlw	1
   986     01A3  1283               	bcf	3,5	;RP0=0, select bank0
   987     01A4  1303               	bcf	3,6	;RP1=0, select bank0
   988     01A5  07B0               	addwf	main@k_158,f
   989     01A6  1803               	skipnc
   990     01A7  0AB1               	incf	main@k_158+1,f
   991     01A8  3000               	movlw	0
   992     01A9  07B1               	addwf	main@k_158+1,f
   993     01AA  298E               	goto	l1576
   994     01AB                     l1586:
   995                           
   996                           ;Main.c: 82:             }
   997     01AB  30FF               	movlw	255
   998     01AC  1283               	bcf	3,5	;RP0=0, select bank0
   999     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1000     01AE  07C2               	addwf	main@s_157,f
  1001     01AF  1803               	skipnc
  1002     01B0  0AC3               	incf	main@s_157+1,f
  1003     01B1  30FF               	movlw	255
  1004     01B2  07C3               	addwf	main@s_157+1,f
  1005     01B3  2965               	goto	l1566
  1006     01B4                     l1590:
  1007                           
  1008                           ;Main.c: 86:             if (manual_active == 0) {
  1009     01B4  084A               	movf	_manual_active,w	;volatile
  1010     01B5  1D03               	btfss	3,2
  1011     01B6  29B8               	goto	u1501
  1012     01B7  29B9               	goto	u1500
  1013     01B8                     u1501:
  1014     01B8  2A4B               	goto	l1632
  1015     01B9                     u1500:
  1016     01B9                     l1592:
  1017                           
  1018                           ;Main.c: 87:                 set_lights(1, 0, 0,
  1019     01B9  01F2               	clrf	set_lights@s_yel
  1020     01BA  01F3               	clrf	set_lights@s_grn
  1021     01BB  01F4               	clrf	set_lights@w_red
  1022     01BC  01F5               	clrf	set_lights@w_yel
  1023     01BD  01F6               	clrf	set_lights@w_grn
  1024     01BE  0AF6               	incf	set_lights@w_grn,f
  1025     01BF  3001               	movlw	1
  1026     01C0  120A  118A  2482  120A  118A  	fcall	_set_lights
  1027     01C5                     l1594:
  1028                           
  1029                           ;Main.c: 89:                 update_displays(0, 0);
  1030     01C5  3000               	movlw	0
  1031     01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1032     01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1033     01C8  00A0               	movwf	update_displays@south_seconds
  1034     01C9  00A1               	movwf	update_displays@south_seconds+1
  1035     01CA  3000               	movlw	0
  1036     01CB  00A2               	movwf	update_displays@west_seconds
  1037     01CC  00A3               	movwf	update_displays@west_seconds+1
  1038     01CD  120A  118A  22E2  120A  118A  	fcall	_update_displays
  1039     01D2                     l1596:
  1040                           
  1041                           ;Main.c: 91:                 uint8_t pressed = 0;
  1042     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1043     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1044     01D4  01BA               	clrf	main@pressed
  1045                           
  1046                           ;Main.c: 92:                 while(!pressed && systemMode == MODE_MANUAL) {
  1047     01D5  29DD               	goto	l1600
  1048     01D6                     l1598:
  1049                           
  1050                           ;Main.c: 93:                     delay_100ms_and_poll_buttons(&pressed);
  1051     01D6  303A               	movlw	(low (main@pressed| 0))& (0+255)
  1052     01D7  00F2               	movwf	delay_100ms_and_poll_buttons@flag_p
  1053     01D8  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
  1054     01DD                     l1600:
  1055                           
  1056                           ;Main.c: 92:                 while(!pressed && systemMode == MODE_MANUAL) {
  1057     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1058     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1059     01DF  083A               	movf	main@pressed,w
  1060     01E0  1D03               	btfss	3,2
  1061     01E1  29E3               	goto	u1511
  1062     01E2  29E4               	goto	u1510
  1063     01E3                     u1511:
  1064     01E3  29E9               	goto	l1604
  1065     01E4                     u1510:
  1066     01E4                     l1602:
  1067     01E4  034B               	decf	_systemMode,w	;volatile
  1068     01E5  1903               	btfsc	3,2
  1069     01E6  29E8               	goto	u1521
  1070     01E7  29E9               	goto	u1520
  1071     01E8                     u1521:
  1072     01E8  29D6               	goto	l1598
  1073     01E9                     u1520:
  1074     01E9                     l1604:
  1075                           
  1076                           ;Main.c: 95:                 if (pressed) {
  1077     01E9  083A               	movf	main@pressed,w
  1078     01EA  1903               	btfsc	3,2
  1079     01EB  29ED               	goto	u1531
  1080     01EC  29EE               	goto	u1530
  1081     01ED                     u1531:
  1082     01ED  2ADE               	goto	l82
  1083     01EE                     u1530:
  1084     01EE                     l1606:
  1085                           
  1086                           ;Main.c: 96:                     set_lights(1, 0, 0,
  1087     01EE  01F2               	clrf	set_lights@s_yel
  1088     01EF  01F3               	clrf	set_lights@s_grn
  1089     01F0  01F4               	clrf	set_lights@w_red
  1090     01F1  01F5               	clrf	set_lights@w_yel
  1091     01F2  0AF5               	incf	set_lights@w_yel,f
  1092     01F3  01F6               	clrf	set_lights@w_grn
  1093     01F4  3001               	movlw	1
  1094     01F5  120A  118A  2482  120A  118A  	fcall	_set_lights
  1095     01FA                     l1608:
  1096                           
  1097                           ;Main.c: 98:                     for (int s=3; s>0; --s) {
  1098     01FA  3003               	movlw	3
  1099     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1100     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1101     01FD  00B6               	movwf	main@s_160
  1102     01FE  3000               	movlw	0
  1103     01FF  00B7               	movwf	main@s_160+1
  1104     0200                     l1610:
  1105     0200  0837               	movf	main@s_160+1,w
  1106     0201  3A80               	xorlw	128
  1107     0202  00FF               	movwf	btemp+1
  1108     0203  3080               	movlw	128
  1109     0204  027F               	subwf	btemp+1,w
  1110     0205  1D03               	skipz
  1111     0206  2A09               	goto	u1545
  1112     0207  3001               	movlw	1
  1113     0208  0236               	subwf	main@s_160,w
  1114     0209                     u1545:
  1115     0209  1803               	skipnc
  1116     020A  2A0C               	goto	u1541
  1117     020B  2A0D               	goto	u1540
  1118     020C                     u1541:
  1119     020C  2A0E               	goto	l1614
  1120     020D                     u1540:
  1121     020D  2A46               	goto	l91
  1122     020E                     l1614:
  1123                           
  1124                           ;Main.c: 99:                         update_displays(0, s);
  1125     020E  3000               	movlw	0
  1126     020F  1283               	bcf	3,5	;RP0=0, select bank0
  1127     0210  1303               	bcf	3,6	;RP1=0, select bank0
  1128     0211  00A0               	movwf	update_displays@south_seconds
  1129     0212  00A1               	movwf	update_displays@south_seconds+1
  1130     0213  0837               	movf	main@s_160+1,w
  1131     0214  00A3               	movwf	update_displays@west_seconds+1
  1132     0215  0836               	movf	main@s_160,w
  1133     0216  00A2               	movwf	update_displays@west_seconds
  1134     0217  120A  118A  22E2  120A  118A  	fcall	_update_displays
  1135     021C                     l1616:
  1136                           
  1137                           ;Main.c: 100:                         for (int k=0;k<10;k++) delay_100ms_and_poll_button
      +                          s(((void*)0));
  1138     021C  1283               	bcf	3,5	;RP0=0, select bank0
  1139     021D  1303               	bcf	3,6	;RP1=0, select bank0
  1140     021E  01B2               	clrf	main@k_161
  1141     021F  01B3               	clrf	main@k_161+1
  1142     0220                     l1618:
  1143     0220  0833               	movf	main@k_161+1,w
  1144     0221  3A80               	xorlw	128
  1145     0222  00FF               	movwf	btemp+1
  1146     0223  3080               	movlw	128
  1147     0224  027F               	subwf	btemp+1,w
  1148     0225  1D03               	skipz
  1149     0226  2A29               	goto	u1555
  1150     0227  300A               	movlw	10
  1151     0228  0232               	subwf	main@k_161,w
  1152     0229                     u1555:
  1153     0229  1C03               	skipc
  1154     022A  2A2C               	goto	u1551
  1155     022B  2A2D               	goto	u1550
  1156     022C                     u1551:
  1157     022C  2A2E               	goto	l1622
  1158     022D                     u1550:
  1159     022D  2A3D               	goto	l1628
  1160     022E                     l1622:
  1161     022E  01F2               	clrf	delay_100ms_and_poll_buttons@flag_p
  1162     022F  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
  1163     0234                     l1624:
  1164     0234  3001               	movlw	1
  1165     0235  1283               	bcf	3,5	;RP0=0, select bank0
  1166     0236  1303               	bcf	3,6	;RP1=0, select bank0
  1167     0237  07B2               	addwf	main@k_161,f
  1168     0238  1803               	skipnc
  1169     0239  0AB3               	incf	main@k_161+1,f
  1170     023A  3000               	movlw	0
  1171     023B  07B3               	addwf	main@k_161+1,f
  1172     023C  2A20               	goto	l1618
  1173     023D                     l1628:
  1174                           
  1175                           ;Main.c: 101:                     }
  1176     023D  30FF               	movlw	255
  1177     023E  1283               	bcf	3,5	;RP0=0, select bank0
  1178     023F  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0240  07B6               	addwf	main@s_160,f
  1180     0241  1803               	skipnc
  1181     0242  0AB7               	incf	main@s_160+1,f
  1182     0243  30FF               	movlw	255
  1183     0244  07B7               	addwf	main@s_160+1,f
  1184     0245  2A00               	goto	l1610
  1185     0246                     l91:
  1186                           
  1187                           ;Main.c: 102:                     manual_active = 1;
  1188     0246  3001               	movlw	1
  1189     0247  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0248  1303               	bcf	3,6	;RP1=0, select bank0
  1191     0249  00CA               	movwf	_manual_active	;volatile
  1192     024A  2829               	goto	l1472
  1193     024B                     l1632:
  1194                           
  1195                           ;Main.c: 106:                 set_lights(0, 0, 1,
  1196     024B  01F2               	clrf	set_lights@s_yel
  1197     024C  01F3               	clrf	set_lights@s_grn
  1198     024D  0AF3               	incf	set_lights@s_grn,f
  1199     024E  01F4               	clrf	set_lights@w_red
  1200     024F  0AF4               	incf	set_lights@w_red,f
  1201     0250  01F5               	clrf	set_lights@w_yel
  1202     0251  01F6               	clrf	set_lights@w_grn
  1203     0252  3000               	movlw	0
  1204     0253  120A  118A  2482  120A  118A  	fcall	_set_lights
  1205     0258                     l1634:
  1206                           
  1207                           ;Main.c: 108:                 update_displays(0,0);
  1208     0258  3000               	movlw	0
  1209     0259  1283               	bcf	3,5	;RP0=0, select bank0
  1210     025A  1303               	bcf	3,6	;RP1=0, select bank0
  1211     025B  00A0               	movwf	update_displays@south_seconds
  1212     025C  00A1               	movwf	update_displays@south_seconds+1
  1213     025D  3000               	movlw	0
  1214     025E  00A2               	movwf	update_displays@west_seconds
  1215     025F  00A3               	movwf	update_displays@west_seconds+1
  1216     0260  120A  118A  22E2  120A  118A  	fcall	_update_displays
  1217     0265                     l1636:
  1218                           
  1219                           ;Main.c: 110:                 uint8_t pressed = 0;
  1220     0265  1283               	bcf	3,5	;RP0=0, select bank0
  1221     0266  1303               	bcf	3,6	;RP1=0, select bank0
  1222     0267  01BB               	clrf	main@pressed_162
  1223                           
  1224                           ;Main.c: 111:                 while(!pressed && systemMode == MODE_MANUAL) {
  1225     0268  2A70               	goto	l1640
  1226     0269                     l1638:
  1227                           
  1228                           ;Main.c: 112:                     delay_100ms_and_poll_buttons(&pressed);
  1229     0269  303B               	movlw	(low (main@pressed_162| 0))& (0+255)
  1230     026A  00F2               	movwf	delay_100ms_and_poll_buttons@flag_p
  1231     026B  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
  1232     0270                     l1640:
  1233                           
  1234                           ;Main.c: 111:                 while(!pressed && systemMode == MODE_MANUAL) {
  1235     0270  1283               	bcf	3,5	;RP0=0, select bank0
  1236     0271  1303               	bcf	3,6	;RP1=0, select bank0
  1237     0272  083B               	movf	main@pressed_162,w
  1238     0273  1D03               	btfss	3,2
  1239     0274  2A76               	goto	u1561
  1240     0275  2A77               	goto	u1560
  1241     0276                     u1561:
  1242     0276  2A7C               	goto	l1644
  1243     0277                     u1560:
  1244     0277                     l1642:
  1245     0277  034B               	decf	_systemMode,w	;volatile
  1246     0278  1903               	btfsc	3,2
  1247     0279  2A7B               	goto	u1571
  1248     027A  2A7C               	goto	u1570
  1249     027B                     u1571:
  1250     027B  2A69               	goto	l1638
  1251     027C                     u1570:
  1252     027C                     l1644:
  1253                           
  1254                           ;Main.c: 114:                 if (pressed) {
  1255     027C  083B               	movf	main@pressed_162,w
  1256     027D  1903               	btfsc	3,2
  1257     027E  2A80               	goto	u1581
  1258     027F  2A81               	goto	u1580
  1259     0280                     u1581:
  1260     0280  2ADE               	goto	l82
  1261     0281                     u1580:
  1262     0281                     l1646:
  1263                           
  1264                           ;Main.c: 115:                     set_lights(0, 1, 0,
  1265     0281  01F2               	clrf	set_lights@s_yel
  1266     0282  0AF2               	incf	set_lights@s_yel,f
  1267     0283  01F3               	clrf	set_lights@s_grn
  1268     0284  01F4               	clrf	set_lights@w_red
  1269     0285  0AF4               	incf	set_lights@w_red,f
  1270     0286  01F5               	clrf	set_lights@w_yel
  1271     0287  01F6               	clrf	set_lights@w_grn
  1272     0288  3000               	movlw	0
  1273     0289  120A  118A  2482  120A  118A  	fcall	_set_lights
  1274     028E                     l1648:
  1275                           
  1276                           ;Main.c: 117:                     for (int s=3; s>0; --s) {
  1277     028E  3003               	movlw	3
  1278     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1279     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1280     0291  00B8               	movwf	main@s_163
  1281     0292  3000               	movlw	0
  1282     0293  00B9               	movwf	main@s_163+1
  1283     0294                     l1650:
  1284     0294  0839               	movf	main@s_163+1,w
  1285     0295  3A80               	xorlw	128
  1286     0296  00FF               	movwf	btemp+1
  1287     0297  3080               	movlw	128
  1288     0298  027F               	subwf	btemp+1,w
  1289     0299  1D03               	skipz
  1290     029A  2A9D               	goto	u1595
  1291     029B  3001               	movlw	1
  1292     029C  0238               	subwf	main@s_163,w
  1293     029D                     u1595:
  1294     029D  1803               	skipnc
  1295     029E  2AA0               	goto	u1591
  1296     029F  2AA1               	goto	u1590
  1297     02A0                     u1591:
  1298     02A0  2AA2               	goto	l1654
  1299     02A1                     u1590:
  1300     02A1  2ADA               	goto	l1672
  1301     02A2                     l1654:
  1302                           
  1303                           ;Main.c: 118:                         update_displays(s, 0);
  1304     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1305     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1306     02A4  0839               	movf	main@s_163+1,w
  1307     02A5  00A1               	movwf	update_displays@south_seconds+1
  1308     02A6  0838               	movf	main@s_163,w
  1309     02A7  00A0               	movwf	update_displays@south_seconds
  1310     02A8  3000               	movlw	0
  1311     02A9  00A2               	movwf	update_displays@west_seconds
  1312     02AA  00A3               	movwf	update_displays@west_seconds+1
  1313     02AB  120A  118A  22E2  120A  118A  	fcall	_update_displays
  1314     02B0                     l1656:
  1315                           
  1316                           ;Main.c: 119:                         for (int k=0;k<10;k++) delay_100ms_and_poll_button
      +                          s(((void*)0));
  1317     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1318     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1319     02B2  01B4               	clrf	main@k_164
  1320     02B3  01B5               	clrf	main@k_164+1
  1321     02B4                     l1658:
  1322     02B4  0835               	movf	main@k_164+1,w
  1323     02B5  3A80               	xorlw	128
  1324     02B6  00FF               	movwf	btemp+1
  1325     02B7  3080               	movlw	128
  1326     02B8  027F               	subwf	btemp+1,w
  1327     02B9  1D03               	skipz
  1328     02BA  2ABD               	goto	u1605
  1329     02BB  300A               	movlw	10
  1330     02BC  0234               	subwf	main@k_164,w
  1331     02BD                     u1605:
  1332     02BD  1C03               	skipc
  1333     02BE  2AC0               	goto	u1601
  1334     02BF  2AC1               	goto	u1600
  1335     02C0                     u1601:
  1336     02C0  2AC2               	goto	l1662
  1337     02C1                     u1600:
  1338     02C1  2AD1               	goto	l1668
  1339     02C2                     l1662:
  1340     02C2  01F2               	clrf	delay_100ms_and_poll_buttons@flag_p
  1341     02C3  120A  118A  2437  120A  118A  	fcall	_delay_100ms_and_poll_buttons
  1342     02C8                     l1664:
  1343     02C8  3001               	movlw	1
  1344     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1345     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1346     02CB  07B4               	addwf	main@k_164,f
  1347     02CC  1803               	skipnc
  1348     02CD  0AB5               	incf	main@k_164+1,f
  1349     02CE  3000               	movlw	0
  1350     02CF  07B5               	addwf	main@k_164+1,f
  1351     02D0  2AB4               	goto	l1658
  1352     02D1                     l1668:
  1353                           
  1354                           ;Main.c: 120:                     }
  1355     02D1  30FF               	movlw	255
  1356     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1357     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1358     02D4  07B8               	addwf	main@s_163,f
  1359     02D5  1803               	skipnc
  1360     02D6  0AB9               	incf	main@s_163+1,f
  1361     02D7  30FF               	movlw	255
  1362     02D8  07B9               	addwf	main@s_163+1,f
  1363     02D9  2A94               	goto	l1650
  1364     02DA                     l1672:
  1365                           
  1366                           ;Main.c: 121:                     manual_active = 0;
  1367     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1368     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1369     02DC  01CA               	clrf	_manual_active	;volatile
  1370     02DD  2829               	goto	l1472
  1371     02DE                     l82:	
  1372                           ;Main.c: 124:         }
  1373                           
  1374     02DE  2829               	goto	l1472
  1375     02DF  120A  118A  280C   	ljmp	start
  1376     02E2                     __end_of_main:
  1377                           
  1378                           	psect	text1
  1379     02E2                     __ptext1:	
  1380 ;; *************** function _update_displays *****************
  1381 ;; Defined at:
  1382 ;;		line 149 in file "Main.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  south_second    2    0[BANK0 ] int 
  1385 ;;  west_seconds    2    2[BANK0 ] int 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  w_ones          1    9[BANK0 ] unsigned char 
  1388 ;;  w_tens          1    8[BANK0 ] unsigned char 
  1389 ;;  s_ones          1    7[BANK0 ] unsigned char 
  1390 ;;  s_tens          1    6[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       4       0       0       0
  1401 ;;      Locals:         0       4       0       0       0
  1402 ;;      Temps:          0       2       0       0       0
  1403 ;;      Totals:         0      10       0       0       0
  1404 ;;Total ram usage:       10 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 3
  1407 ;; This function calls:
  1408 ;;		___awdiv
  1409 ;;		___awmod
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415     02E2                     _update_displays:	
  1416                           ;psect for function _update_displays
  1417                           
  1418     02E2                     l1440:	
  1419                           ;incstack = 0
  1420                           ; Regs used in _update_displays: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1421                           
  1422                           
  1423                           ;Main.c: 150:     if (south_seconds < 0) south_seconds = 0;
  1424     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1425     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1426     02E4  1FA1               	btfss	update_displays@south_seconds+1,7
  1427     02E5  2AE7               	goto	u1351
  1428     02E6  2AE8               	goto	u1350
  1429     02E7                     u1351:
  1430     02E7  2AEA               	goto	l1444
  1431     02E8                     u1350:
  1432     02E8                     l1442:
  1433     02E8  01A0               	clrf	update_displays@south_seconds
  1434     02E9  01A1               	clrf	update_displays@south_seconds+1
  1435     02EA                     l1444:
  1436                           
  1437                           ;Main.c: 151:     if (south_seconds > 99) south_seconds = 99;
  1438     02EA  0821               	movf	update_displays@south_seconds+1,w
  1439     02EB  3A80               	xorlw	128
  1440     02EC  00FF               	movwf	btemp+1
  1441     02ED  3080               	movlw	128
  1442     02EE  027F               	subwf	btemp+1,w
  1443     02EF  1D03               	skipz
  1444     02F0  2AF3               	goto	u1365
  1445     02F1  3064               	movlw	100
  1446     02F2  0220               	subwf	update_displays@south_seconds,w
  1447     02F3                     u1365:
  1448     02F3  1C03               	skipc
  1449     02F4  2AF6               	goto	u1361
  1450     02F5  2AF7               	goto	u1360
  1451     02F6                     u1361:
  1452     02F6  2AFD               	goto	l1448
  1453     02F7                     u1360:
  1454     02F7                     l1446:
  1455     02F7  3063               	movlw	99
  1456     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  1457     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  1458     02FA  00A0               	movwf	update_displays@south_seconds
  1459     02FB  3000               	movlw	0
  1460     02FC  00A1               	movwf	update_displays@south_seconds+1
  1461     02FD                     l1448:
  1462                           
  1463                           ;Main.c: 152:     if (west_seconds < 0) west_seconds = 0;
  1464     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1465     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1466     02FF  1FA3               	btfss	update_displays@west_seconds+1,7
  1467     0300  2B02               	goto	u1371
  1468     0301  2B03               	goto	u1370
  1469     0302                     u1371:
  1470     0302  2B05               	goto	l1452
  1471     0303                     u1370:
  1472     0303                     l1450:
  1473     0303  01A2               	clrf	update_displays@west_seconds
  1474     0304  01A3               	clrf	update_displays@west_seconds+1
  1475     0305                     l1452:
  1476                           
  1477                           ;Main.c: 153:     if (west_seconds > 99) west_seconds = 99;
  1478     0305  0823               	movf	update_displays@west_seconds+1,w
  1479     0306  3A80               	xorlw	128
  1480     0307  00FF               	movwf	btemp+1
  1481     0308  3080               	movlw	128
  1482     0309  027F               	subwf	btemp+1,w
  1483     030A  1D03               	skipz
  1484     030B  2B0E               	goto	u1385
  1485     030C  3064               	movlw	100
  1486     030D  0222               	subwf	update_displays@west_seconds,w
  1487     030E                     u1385:
  1488     030E  1C03               	skipc
  1489     030F  2B11               	goto	u1381
  1490     0310  2B12               	goto	u1380
  1491     0311                     u1381:
  1492     0311  2B18               	goto	l1456
  1493     0312                     u1380:
  1494     0312                     l1454:
  1495     0312  3063               	movlw	99
  1496     0313  1283               	bcf	3,5	;RP0=0, select bank0
  1497     0314  1303               	bcf	3,6	;RP1=0, select bank0
  1498     0315  00A2               	movwf	update_displays@west_seconds
  1499     0316  3000               	movlw	0
  1500     0317  00A3               	movwf	update_displays@west_seconds+1
  1501     0318                     l1456:
  1502                           
  1503                           ;Main.c: 155:     uint8_t s_tens = south_seconds / 10;
  1504     0318  300A               	movlw	10
  1505     0319  00F2               	movwf	___awdiv@divisor
  1506     031A  3000               	movlw	0
  1507     031B  00F3               	movwf	___awdiv@divisor+1
  1508     031C  1283               	bcf	3,5	;RP0=0, select bank0
  1509     031D  1303               	bcf	3,6	;RP1=0, select bank0
  1510     031E  0821               	movf	update_displays@south_seconds+1,w
  1511     031F  00F5               	movwf	___awdiv@dividend+1
  1512     0320  0820               	movf	update_displays@south_seconds,w
  1513     0321  00F4               	movwf	___awdiv@dividend
  1514     0322  120A  118A  237D  120A  118A  	fcall	___awdiv
  1515     0327  0872               	movf	?___awdiv,w
  1516     0328  1283               	bcf	3,5	;RP0=0, select bank0
  1517     0329  1303               	bcf	3,6	;RP1=0, select bank0
  1518     032A  00A6               	movwf	update_displays@s_tens
  1519     032B                     l1458:
  1520                           
  1521                           ;Main.c: 156:     uint8_t s_ones = south_seconds % 10;
  1522     032B  300A               	movlw	10
  1523     032C  00F2               	movwf	___awmod@divisor
  1524     032D  3000               	movlw	0
  1525     032E  00F3               	movwf	___awmod@divisor+1
  1526     032F  0821               	movf	update_displays@south_seconds+1,w
  1527     0330  00F5               	movwf	___awmod@dividend+1
  1528     0331  0820               	movf	update_displays@south_seconds,w
  1529     0332  00F4               	movwf	___awmod@dividend
  1530     0333  120A  118A  23E0  120A  118A  	fcall	___awmod
  1531     0338  0872               	movf	?___awmod,w
  1532     0339  1283               	bcf	3,5	;RP0=0, select bank0
  1533     033A  1303               	bcf	3,6	;RP1=0, select bank0
  1534     033B  00A7               	movwf	update_displays@s_ones
  1535     033C                     l1460:
  1536                           
  1537                           ;Main.c: 157:     uint8_t w_tens = west_seconds / 10;
  1538     033C  300A               	movlw	10
  1539     033D  00F2               	movwf	___awdiv@divisor
  1540     033E  3000               	movlw	0
  1541     033F  00F3               	movwf	___awdiv@divisor+1
  1542     0340  0823               	movf	update_displays@west_seconds+1,w
  1543     0341  00F5               	movwf	___awdiv@dividend+1
  1544     0342  0822               	movf	update_displays@west_seconds,w
  1545     0343  00F4               	movwf	___awdiv@dividend
  1546     0344  120A  118A  237D  120A  118A  	fcall	___awdiv
  1547     0349  0872               	movf	?___awdiv,w
  1548     034A  1283               	bcf	3,5	;RP0=0, select bank0
  1549     034B  1303               	bcf	3,6	;RP1=0, select bank0
  1550     034C  00A8               	movwf	update_displays@w_tens
  1551     034D                     l1462:
  1552                           
  1553                           ;Main.c: 158:     uint8_t w_ones = west_seconds % 10;
  1554     034D  300A               	movlw	10
  1555     034E  00F2               	movwf	___awmod@divisor
  1556     034F  3000               	movlw	0
  1557     0350  00F3               	movwf	___awmod@divisor+1
  1558     0351  0823               	movf	update_displays@west_seconds+1,w
  1559     0352  00F5               	movwf	___awmod@dividend+1
  1560     0353  0822               	movf	update_displays@west_seconds,w
  1561     0354  00F4               	movwf	___awmod@dividend
  1562     0355  120A  118A  23E0  120A  118A  	fcall	___awmod
  1563     035A  0872               	movf	?___awmod,w
  1564     035B  1283               	bcf	3,5	;RP0=0, select bank0
  1565     035C  1303               	bcf	3,6	;RP1=0, select bank0
  1566     035D  00A9               	movwf	update_displays@w_ones
  1567     035E                     l1464:
  1568                           
  1569                           ;Main.c: 160:     PORTC = (uint8_t)((s_tens << 4) | (s_ones & 0x0F));
  1570     035E  300F               	movlw	15
  1571     035F  0527               	andwf	update_displays@s_ones,w
  1572     0360  00A4               	movwf	??_update_displays
  1573     0361  0826               	movf	update_displays@s_tens,w
  1574     0362  00A5               	movwf	??_update_displays+1
  1575     0363  3003               	movlw	3
  1576     0364                     u1395:
  1577     0364  1003               	clrc
  1578     0365  0DA5               	rlf	??_update_displays+1,f
  1579     0366  3EFF               	addlw	-1
  1580     0367  1D03               	skipz
  1581     0368  2B64               	goto	u1395
  1582     0369  1003               	clrc
  1583     036A  0D25               	rlf	??_update_displays+1,w
  1584     036B  0424               	iorwf	??_update_displays,w
  1585     036C  0087               	movwf	7	;volatile
  1586     036D                     l1466:
  1587                           
  1588                           ;Main.c: 161:     PORTD = (uint8_t)((w_tens << 4) | (w_ones & 0x0F));
  1589     036D  300F               	movlw	15
  1590     036E  0529               	andwf	update_displays@w_ones,w
  1591     036F  00A4               	movwf	??_update_displays
  1592     0370  0828               	movf	update_displays@w_tens,w
  1593     0371  00A5               	movwf	??_update_displays+1
  1594     0372  3003               	movlw	3
  1595     0373                     u1405:
  1596     0373  1003               	clrc
  1597     0374  0DA5               	rlf	??_update_displays+1,f
  1598     0375  3EFF               	addlw	-1
  1599     0376  1D03               	skipz
  1600     0377  2B73               	goto	u1405
  1601     0378  1003               	clrc
  1602     0379  0D25               	rlf	??_update_displays+1,w
  1603     037A  0424               	iorwf	??_update_displays,w
  1604     037B  0088               	movwf	8	;volatile
  1605     037C                     l117:
  1606     037C  0008               	return
  1607     037D                     __end_of_update_displays:
  1608                           
  1609                           	psect	text2
  1610     03E0                     __ptext2:	
  1611 ;; *************** function ___awmod *****************
  1612 ;; Defined at:
  1613 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  divisor         2    2[COMMON] int 
  1616 ;;  dividend        2    4[COMMON] int 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  sign            1    7[COMMON] unsigned char 
  1619 ;;  counter         1    6[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2    2[COMMON] int 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         4       0       0       0       0
  1630 ;;      Locals:         2       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         6       0       0       0       0
  1633 ;;Total ram usage:        6 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 2
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_update_displays
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643     03E0                     ___awmod:	
  1644                           ;psect for function ___awmod
  1645                           
  1646     03E0                     l1106:	
  1647                           ;incstack = 0
  1648                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1649                           
  1650     03E0  01F7               	clrf	___awmod@sign
  1651     03E1                     l1108:
  1652     03E1  1FF5               	btfss	___awmod@dividend+1,7
  1653     03E2  2BE4               	goto	u781
  1654     03E3  2BE5               	goto	u780
  1655     03E4                     u781:
  1656     03E4  2BEC               	goto	l1114
  1657     03E5                     u780:
  1658     03E5                     l1110:
  1659     03E5  09F4               	comf	___awmod@dividend,f
  1660     03E6  09F5               	comf	___awmod@dividend+1,f
  1661     03E7  0AF4               	incf	___awmod@dividend,f
  1662     03E8  1903               	skipnz
  1663     03E9  0AF5               	incf	___awmod@dividend+1,f
  1664     03EA                     l1112:
  1665     03EA  3001               	movlw	1
  1666     03EB  00F7               	movwf	___awmod@sign
  1667     03EC                     l1114:
  1668     03EC  1FF3               	btfss	___awmod@divisor+1,7
  1669     03ED  2BEF               	goto	u791
  1670     03EE  2BF0               	goto	u790
  1671     03EF                     u791:
  1672     03EF  2BF5               	goto	l1118
  1673     03F0                     u790:
  1674     03F0                     l1116:
  1675     03F0  09F2               	comf	___awmod@divisor,f
  1676     03F1  09F3               	comf	___awmod@divisor+1,f
  1677     03F2  0AF2               	incf	___awmod@divisor,f
  1678     03F3  1903               	skipnz
  1679     03F4  0AF3               	incf	___awmod@divisor+1,f
  1680     03F5                     l1118:
  1681     03F5  0872               	movf	___awmod@divisor,w
  1682     03F6  0473               	iorwf	___awmod@divisor+1,w
  1683     03F7  1903               	btfsc	3,2
  1684     03F8  2BFA               	goto	u801
  1685     03F9  2BFB               	goto	u800
  1686     03FA                     u801:
  1687     03FA  2C28               	goto	l1136
  1688     03FB                     u800:
  1689     03FB                     l1120:
  1690     03FB  3001               	movlw	1
  1691     03FC  00F6               	movwf	___awmod@counter
  1692     03FD  2C07               	goto	l1126
  1693     03FE                     l1122:
  1694     03FE  3001               	movlw	1
  1695     03FF                     u815:
  1696     03FF  1003               	clrc
  1697     0400  0DF2               	rlf	___awmod@divisor,f
  1698     0401  0DF3               	rlf	___awmod@divisor+1,f
  1699     0402  3EFF               	addlw	-1
  1700     0403  1D03               	skipz
  1701     0404  2BFF               	goto	u815
  1702     0405                     l1124:
  1703     0405  3001               	movlw	1
  1704     0406  07F6               	addwf	___awmod@counter,f
  1705     0407                     l1126:
  1706     0407  1FF3               	btfss	___awmod@divisor+1,7
  1707     0408  2C0A               	goto	u821
  1708     0409  2C0B               	goto	u820
  1709     040A                     u821:
  1710     040A  2BFE               	goto	l1122
  1711     040B                     u820:
  1712     040B                     l1128:
  1713     040B  0873               	movf	___awmod@divisor+1,w
  1714     040C  0275               	subwf	___awmod@dividend+1,w
  1715     040D  1D03               	skipz
  1716     040E  2C11               	goto	u835
  1717     040F  0872               	movf	___awmod@divisor,w
  1718     0410  0274               	subwf	___awmod@dividend,w
  1719     0411                     u835:
  1720     0411  1C03               	skipc
  1721     0412  2C14               	goto	u831
  1722     0413  2C15               	goto	u830
  1723     0414                     u831:
  1724     0414  2C1B               	goto	l1132
  1725     0415                     u830:
  1726     0415                     l1130:
  1727     0415  0872               	movf	___awmod@divisor,w
  1728     0416  02F4               	subwf	___awmod@dividend,f
  1729     0417  0873               	movf	___awmod@divisor+1,w
  1730     0418  1C03               	skipc
  1731     0419  03F5               	decf	___awmod@dividend+1,f
  1732     041A  02F5               	subwf	___awmod@dividend+1,f
  1733     041B                     l1132:
  1734     041B  3001               	movlw	1
  1735     041C                     u845:
  1736     041C  1003               	clrc
  1737     041D  0CF3               	rrf	___awmod@divisor+1,f
  1738     041E  0CF2               	rrf	___awmod@divisor,f
  1739     041F  3EFF               	addlw	-1
  1740     0420  1D03               	skipz
  1741     0421  2C1C               	goto	u845
  1742     0422                     l1134:
  1743     0422  3001               	movlw	1
  1744     0423  02F6               	subwf	___awmod@counter,f
  1745     0424  1D03               	btfss	3,2
  1746     0425  2C27               	goto	u851
  1747     0426  2C28               	goto	u850
  1748     0427                     u851:
  1749     0427  2C0B               	goto	l1128
  1750     0428                     u850:
  1751     0428                     l1136:
  1752     0428  0877               	movf	___awmod@sign,w
  1753     0429  1903               	btfsc	3,2
  1754     042A  2C2C               	goto	u861
  1755     042B  2C2D               	goto	u860
  1756     042C                     u861:
  1757     042C  2C32               	goto	l1140
  1758     042D                     u860:
  1759     042D                     l1138:
  1760     042D  09F4               	comf	___awmod@dividend,f
  1761     042E  09F5               	comf	___awmod@dividend+1,f
  1762     042F  0AF4               	incf	___awmod@dividend,f
  1763     0430  1903               	skipnz
  1764     0431  0AF5               	incf	___awmod@dividend+1,f
  1765     0432                     l1140:
  1766     0432  0875               	movf	___awmod@dividend+1,w
  1767     0433  00F3               	movwf	?___awmod+1
  1768     0434  0874               	movf	___awmod@dividend,w
  1769     0435  00F2               	movwf	?___awmod
  1770     0436                     l392:
  1771     0436  0008               	return
  1772     0437                     __end_of___awmod:
  1773                           
  1774                           	psect	text3
  1775     037D                     __ptext3:	
  1776 ;; *************** function ___awdiv *****************
  1777 ;; Defined at:
  1778 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  divisor         2    2[COMMON] int 
  1781 ;;  dividend        2    4[COMMON] int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  quotient        2    8[COMMON] int 
  1784 ;;  sign            1    7[COMMON] unsigned char 
  1785 ;;  counter         1    6[COMMON] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2    2[COMMON] int 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         4       0       0       0       0
  1796 ;;      Locals:         4       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0
  1798 ;;      Totals:         8       0       0       0       0
  1799 ;;Total ram usage:        8 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 2
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_update_displays
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809     037D                     ___awdiv:	
  1810                           ;psect for function ___awdiv
  1811                           
  1812     037D                     l1062:	
  1813                           ;incstack = 0
  1814                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1815                           
  1816     037D  01F7               	clrf	___awdiv@sign
  1817     037E                     l1064:
  1818     037E  1FF3               	btfss	___awdiv@divisor+1,7
  1819     037F  2B81               	goto	u681
  1820     0380  2B82               	goto	u680
  1821     0381                     u681:
  1822     0381  2B89               	goto	l1070
  1823     0382                     u680:
  1824     0382                     l1066:
  1825     0382  09F2               	comf	___awdiv@divisor,f
  1826     0383  09F3               	comf	___awdiv@divisor+1,f
  1827     0384  0AF2               	incf	___awdiv@divisor,f
  1828     0385  1903               	skipnz
  1829     0386  0AF3               	incf	___awdiv@divisor+1,f
  1830     0387                     l1068:
  1831     0387  3001               	movlw	1
  1832     0388  00F7               	movwf	___awdiv@sign
  1833     0389                     l1070:
  1834     0389  1FF5               	btfss	___awdiv@dividend+1,7
  1835     038A  2B8C               	goto	u691
  1836     038B  2B8D               	goto	u690
  1837     038C                     u691:
  1838     038C  2B94               	goto	l1076
  1839     038D                     u690:
  1840     038D                     l1072:
  1841     038D  09F4               	comf	___awdiv@dividend,f
  1842     038E  09F5               	comf	___awdiv@dividend+1,f
  1843     038F  0AF4               	incf	___awdiv@dividend,f
  1844     0390  1903               	skipnz
  1845     0391  0AF5               	incf	___awdiv@dividend+1,f
  1846     0392                     l1074:
  1847     0392  3001               	movlw	1
  1848     0393  06F7               	xorwf	___awdiv@sign,f
  1849     0394                     l1076:
  1850     0394  01F8               	clrf	___awdiv@quotient
  1851     0395  01F9               	clrf	___awdiv@quotient+1
  1852     0396                     l1078:
  1853     0396  0872               	movf	___awdiv@divisor,w
  1854     0397  0473               	iorwf	___awdiv@divisor+1,w
  1855     0398  1903               	btfsc	3,2
  1856     0399  2B9B               	goto	u701
  1857     039A  2B9C               	goto	u700
  1858     039B                     u701:
  1859     039B  2BD1               	goto	l1098
  1860     039C                     u700:
  1861     039C                     l1080:
  1862     039C  3001               	movlw	1
  1863     039D  00F6               	movwf	___awdiv@counter
  1864     039E  2BA8               	goto	l1086
  1865     039F                     l1082:
  1866     039F  3001               	movlw	1
  1867     03A0                     u715:
  1868     03A0  1003               	clrc
  1869     03A1  0DF2               	rlf	___awdiv@divisor,f
  1870     03A2  0DF3               	rlf	___awdiv@divisor+1,f
  1871     03A3  3EFF               	addlw	-1
  1872     03A4  1D03               	skipz
  1873     03A5  2BA0               	goto	u715
  1874     03A6                     l1084:
  1875     03A6  3001               	movlw	1
  1876     03A7  07F6               	addwf	___awdiv@counter,f
  1877     03A8                     l1086:
  1878     03A8  1FF3               	btfss	___awdiv@divisor+1,7
  1879     03A9  2BAB               	goto	u721
  1880     03AA  2BAC               	goto	u720
  1881     03AB                     u721:
  1882     03AB  2B9F               	goto	l1082
  1883     03AC                     u720:
  1884     03AC                     l1088:
  1885     03AC  3001               	movlw	1
  1886     03AD                     u735:
  1887     03AD  1003               	clrc
  1888     03AE  0DF8               	rlf	___awdiv@quotient,f
  1889     03AF  0DF9               	rlf	___awdiv@quotient+1,f
  1890     03B0  3EFF               	addlw	-1
  1891     03B1  1D03               	skipz
  1892     03B2  2BAD               	goto	u735
  1893     03B3  0873               	movf	___awdiv@divisor+1,w
  1894     03B4  0275               	subwf	___awdiv@dividend+1,w
  1895     03B5  1D03               	skipz
  1896     03B6  2BB9               	goto	u745
  1897     03B7  0872               	movf	___awdiv@divisor,w
  1898     03B8  0274               	subwf	___awdiv@dividend,w
  1899     03B9                     u745:
  1900     03B9  1C03               	skipc
  1901     03BA  2BBC               	goto	u741
  1902     03BB  2BBD               	goto	u740
  1903     03BC                     u741:
  1904     03BC  2BC4               	goto	l1094
  1905     03BD                     u740:
  1906     03BD                     l1090:
  1907     03BD  0872               	movf	___awdiv@divisor,w
  1908     03BE  02F4               	subwf	___awdiv@dividend,f
  1909     03BF  0873               	movf	___awdiv@divisor+1,w
  1910     03C0  1C03               	skipc
  1911     03C1  03F5               	decf	___awdiv@dividend+1,f
  1912     03C2  02F5               	subwf	___awdiv@dividend+1,f
  1913     03C3                     l1092:
  1914     03C3  1478               	bsf	___awdiv@quotient,0
  1915     03C4                     l1094:
  1916     03C4  3001               	movlw	1
  1917     03C5                     u755:
  1918     03C5  1003               	clrc
  1919     03C6  0CF3               	rrf	___awdiv@divisor+1,f
  1920     03C7  0CF2               	rrf	___awdiv@divisor,f
  1921     03C8  3EFF               	addlw	-1
  1922     03C9  1D03               	skipz
  1923     03CA  2BC5               	goto	u755
  1924     03CB                     l1096:
  1925     03CB  3001               	movlw	1
  1926     03CC  02F6               	subwf	___awdiv@counter,f
  1927     03CD  1D03               	btfss	3,2
  1928     03CE  2BD0               	goto	u761
  1929     03CF  2BD1               	goto	u760
  1930     03D0                     u761:
  1931     03D0  2BAC               	goto	l1088
  1932     03D1                     u760:
  1933     03D1                     l1098:
  1934     03D1  0877               	movf	___awdiv@sign,w
  1935     03D2  1903               	btfsc	3,2
  1936     03D3  2BD5               	goto	u771
  1937     03D4  2BD6               	goto	u770
  1938     03D5                     u771:
  1939     03D5  2BDB               	goto	l1102
  1940     03D6                     u770:
  1941     03D6                     l1100:
  1942     03D6  09F8               	comf	___awdiv@quotient,f
  1943     03D7  09F9               	comf	___awdiv@quotient+1,f
  1944     03D8  0AF8               	incf	___awdiv@quotient,f
  1945     03D9  1903               	skipnz
  1946     03DA  0AF9               	incf	___awdiv@quotient+1,f
  1947     03DB                     l1102:
  1948     03DB  0879               	movf	___awdiv@quotient+1,w
  1949     03DC  00F3               	movwf	?___awdiv+1
  1950     03DD  0878               	movf	___awdiv@quotient,w
  1951     03DE  00F2               	movwf	?___awdiv
  1952     03DF                     l379:
  1953     03DF  0008               	return
  1954     03E0                     __end_of___awdiv:
  1955                           
  1956                           	psect	text4
  1957     0482                     __ptext4:	
  1958 ;; *************** function _set_lights *****************
  1959 ;; Defined at:
  1960 ;;		line 164 in file "Main.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  s_red           1    wreg     _Bool 
  1963 ;;  s_yel           1    2[COMMON] _Bool 
  1964 ;;  s_grn           1    3[COMMON] _Bool 
  1965 ;;  w_red           1    4[COMMON] _Bool 
  1966 ;;  w_yel           1    5[COMMON] _Bool 
  1967 ;;  w_grn           1    6[COMMON] _Bool 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  s_red           1    7[COMMON] _Bool 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         5       0       0       0       0
  1980 ;;      Locals:         1       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0
  1982 ;;      Totals:         6       0       0       0       0
  1983 ;;Total ram usage:        6 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 2
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993     0482                     _set_lights:	
  1994                           ;psect for function _set_lights
  1995                           
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _set_lights: [wreg+status,2+status,0]
  1999                           ;set_lights@s_red stored from wreg
  2000     0482  00F7               	movwf	set_lights@s_red
  2001     0483                     l1160:
  2002                           
  2003                           ;Main.c: 164: void set_lights(_Bool s_red, _Bool s_yel, _Bool s_grn,;Main.c: 165:       
      +                                    _Bool w_red, _Bool w_yel, _Bool w_grn) {;Main.c: 166:     PORTAbits.RA0 = s_re
      +                          d ? 1 : 0;
  2004     0483  0877               	movf	set_lights@s_red,w
  2005     0484  1D03               	btfss	3,2
  2006     0485  2C87               	goto	u871
  2007     0486  2C8B               	goto	u870
  2008     0487                     u871:
  2009     0487  1283               	bcf	3,5	;RP0=0, select bank0
  2010     0488  1303               	bcf	3,6	;RP1=0, select bank0
  2011     0489  1405               	bsf	5,0	;volatile
  2012     048A  2C8E               	goto	u884
  2013     048B                     u870:
  2014     048B  1283               	bcf	3,5	;RP0=0, select bank0
  2015     048C  1303               	bcf	3,6	;RP1=0, select bank0
  2016     048D  1005               	bcf	5,0	;volatile
  2017     048E                     u884:
  2018                           
  2019                           ;Main.c: 167:     PORTAbits.RA1 = s_yel ? 1 : 0;
  2020     048E  0872               	movf	set_lights@s_yel,w
  2021     048F  1D03               	btfss	3,2
  2022     0490  2C92               	goto	u891
  2023     0491  2C96               	goto	u890
  2024     0492                     u891:
  2025     0492  1283               	bcf	3,5	;RP0=0, select bank0
  2026     0493  1303               	bcf	3,6	;RP1=0, select bank0
  2027     0494  1485               	bsf	5,1	;volatile
  2028     0495  2C99               	goto	u904
  2029     0496                     u890:
  2030     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2031     0497  1303               	bcf	3,6	;RP1=0, select bank0
  2032     0498  1085               	bcf	5,1	;volatile
  2033     0499                     u904:
  2034                           
  2035                           ;Main.c: 168:     PORTAbits.RA2 = s_grn ? 1 : 0;
  2036     0499  0873               	movf	set_lights@s_grn,w
  2037     049A  1D03               	btfss	3,2
  2038     049B  2C9D               	goto	u911
  2039     049C  2CA1               	goto	u910
  2040     049D                     u911:
  2041     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2042     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2043     049F  1505               	bsf	5,2	;volatile
  2044     04A0  2CA4               	goto	u924
  2045     04A1                     u910:
  2046     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2047     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2048     04A3  1105               	bcf	5,2	;volatile
  2049     04A4                     u924:
  2050                           
  2051                           ;Main.c: 169:     PORTAbits.RA3 = w_grn ? 1 : 0;
  2052     04A4  0876               	movf	set_lights@w_grn,w
  2053     04A5  1D03               	btfss	3,2
  2054     04A6  2CA8               	goto	u931
  2055     04A7  2CAC               	goto	u930
  2056     04A8                     u931:
  2057     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2058     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2059     04AA  1585               	bsf	5,3	;volatile
  2060     04AB  2CAF               	goto	u944
  2061     04AC                     u930:
  2062     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2063     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2064     04AE  1185               	bcf	5,3	;volatile
  2065     04AF                     u944:
  2066                           
  2067                           ;Main.c: 170:     PORTAbits.RA4 = w_yel ? 1 : 0;
  2068     04AF  0875               	movf	set_lights@w_yel,w
  2069     04B0  1D03               	btfss	3,2
  2070     04B1  2CB3               	goto	u951
  2071     04B2  2CB7               	goto	u950
  2072     04B3                     u951:
  2073     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2074     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2075     04B5  1605               	bsf	5,4	;volatile
  2076     04B6  2CBA               	goto	u964
  2077     04B7                     u950:
  2078     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2079     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2080     04B9  1205               	bcf	5,4	;volatile
  2081     04BA                     u964:
  2082                           
  2083                           ;Main.c: 171:     PORTAbits.RA5 = w_red ? 1 : 0;
  2084     04BA  0874               	movf	set_lights@w_red,w
  2085     04BB  1D03               	btfss	3,2
  2086     04BC  2CBE               	goto	u971
  2087     04BD  2CC2               	goto	u970
  2088     04BE                     u971:
  2089     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2090     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2091     04C0  1685               	bsf	5,5	;volatile
  2092     04C1  2CC5               	goto	u984
  2093     04C2                     u970:
  2094     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2095     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2096     04C4  1285               	bcf	5,5	;volatile
  2097     04C5                     u984:
  2098     04C5                     l120:
  2099     04C5  0008               	return
  2100     04C6                     __end_of_set_lights:
  2101                           
  2102                           	psect	text5
  2103     0506                     __ptext5:	
  2104 ;; *************** function _reset_cycle_timers *****************
  2105 ;; Defined at:
  2106 ;;		line 174 in file "Main.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 2
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134     0506                     _reset_cycle_timers:	
  2135                           ;psect for function _reset_cycle_timers
  2136                           
  2137     0506                     l1144:	
  2138                           ;incstack = 0
  2139                           ; Regs used in _reset_cycle_timers: [wreg]
  2140                           
  2141                           
  2142                           ;Main.c: 175:     west_timer = 20;
  2143     0506  3014               	movlw	20
  2144     0507  1283               	bcf	3,5	;RP0=0, select bank0
  2145     0508  1303               	bcf	3,6	;RP1=0, select bank0
  2146     0509  00C8               	movwf	_west_timer	;volatile
  2147     050A  3000               	movlw	0
  2148     050B  00C9               	movwf	_west_timer+1	;volatile
  2149                           
  2150                           ;Main.c: 176:     south_timer = 23;
  2151     050C  3017               	movlw	23
  2152     050D  00C6               	movwf	_south_timer	;volatile
  2153     050E  3000               	movlw	0
  2154     050F  00C7               	movwf	_south_timer+1	;volatile
  2155     0510                     l123:
  2156     0510  0008               	return
  2157     0511                     __end_of_reset_cycle_timers:
  2158                           
  2159                           	psect	text6
  2160     04E9                     __ptext6:	
  2161 ;; *************** function _init_ports *****************
  2162 ;; Defined at:
  2163 ;;		line 128 in file "Main.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		status,2
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 2
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191     04E9                     _init_ports:	
  2192                           ;psect for function _init_ports
  2193                           
  2194     04E9                     l1146:	
  2195                           ;incstack = 0
  2196                           ; Regs used in _init_ports: [status,2]
  2197                           
  2198                           
  2199                           ;Main.c: 130:     TRISA = 0x00;
  2200     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  2201     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  2202     04EB  0185               	clrf	5	;volatile
  2203                           
  2204                           ;Main.c: 131:     PORTA = 0x00;
  2205     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2206     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2207     04EE  0185               	clrf	5	;volatile
  2208                           
  2209                           ;Main.c: 133:     TRISC = 0x00;
  2210     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2211     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2212     04F1  0187               	clrf	7	;volatile
  2213                           
  2214                           ;Main.c: 134:     PORTC = 0x00;
  2215     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2216     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2217     04F4  0187               	clrf	7	;volatile
  2218                           
  2219                           ;Main.c: 135:     TRISD = 0x00;
  2220     04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2221     04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2222     04F7  0188               	clrf	8	;volatile
  2223                           
  2224                           ;Main.c: 136:     PORTD = 0x00;
  2225     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2226     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2227     04FA  0188               	clrf	8	;volatile
  2228     04FB                     l1148:
  2229                           
  2230                           ;Main.c: 138:     TRISB = 0xFF;
  2231     04FB  30FF               	movlw	255
  2232     04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2233     04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2234     04FE  0086               	movwf	6	;volatile
  2235     04FF                     l1150:
  2236                           
  2237                           ;Main.c: 139:     INTF = 0;
  2238     04FF  108B               	bcf	11,1	;volatile
  2239     0500                     l1152:
  2240                           
  2241                           ;Main.c: 140:     INTEDG = 0;
  2242     0500  1301               	bcf	1,6	;volatile
  2243     0501                     l1154:
  2244                           
  2245                           ;Main.c: 141:     GIE = 1;
  2246     0501  178B               	bsf	11,7	;volatile
  2247     0502                     l1156:
  2248                           
  2249                           ;Main.c: 142:     INTE = 1;
  2250     0502  160B               	bsf	11,4	;volatile
  2251     0503                     l1158:
  2252                           
  2253                           ;Main.c: 144:     OPTION_REGbits.nRBPU = 0;
  2254     0503  1381               	bcf	1,7	;volatile
  2255                           
  2256                           ;Main.c: 146:     int_debounce = 0;
  2257     0504  01FB               	clrf	_int_debounce	;volatile
  2258     0505                     l110:
  2259     0505  0008               	return
  2260     0506                     __end_of_init_ports:
  2261                           
  2262                           	psect	text7
  2263     0437                     __ptext7:	
  2264 ;; *************** function _delay_100ms_and_poll_buttons *****************
  2265 ;; Defined at:
  2266 ;;		line 179 in file "Main.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  flag_p          1    2[COMMON] PTR unsigned char 
  2269 ;;		 -> main@pressed_162(1), main@pressed(1), NULL(0), 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         1       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0
  2283 ;;      Temps:          3       0       0       0       0
  2284 ;;      Totals:         4       0       0       0       0
  2285 ;;Total ram usage:        4 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 2
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295     0437                     _delay_100ms_and_poll_buttons:	
  2296                           ;psect for function _delay_100ms_and_poll_buttons
  2297                           
  2298     0437                     l1190:	
  2299                           ;incstack = 0
  2300                           ; Regs used in _delay_100ms_and_poll_buttons: [wreg-fsr0h+status,2+status,0]
  2301                           
  2302                           
  2303                           ;Main.c: 180:     static uint8_t rb1_count = 0;;Main.c: 181:     const uint8_t DEBOUNCE_
      +                          THRESHOLD = 3;;Main.c: 183:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2304     0437  3002               	movlw	2
  2305     0438  00F5               	movwf	??_delay_100ms_and_poll_buttons+2
  2306     0439  3004               	movlw	4
  2307     043A  00F4               	movwf	??_delay_100ms_and_poll_buttons+1
  2308     043B  30BA               	movlw	186
  2309     043C  00F3               	movwf	??_delay_100ms_and_poll_buttons
  2310     043D                     u1617:
  2311     043D  0BF3               	decfsz	??_delay_100ms_and_poll_buttons,f
  2312     043E  2C3D               	goto	u1617
  2313     043F  0BF4               	decfsz	??_delay_100ms_and_poll_buttons+1,f
  2314     0440  2C3D               	goto	u1617
  2315     0441  0BF5               	decfsz	??_delay_100ms_and_poll_buttons+2,f
  2316     0442  2C3D               	goto	u1617
  2317     0443  0000               	nop
  2318     0444                     l1192:
  2319                           
  2320                           ;Main.c: 185:     if ((PORTBbits.RB1) == 0) {
  2321     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2322     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2323     0446  1886               	btfsc	6,1	;volatile
  2324     0447  2C49               	goto	u1051
  2325     0448  2C4A               	goto	u1050
  2326     0449                     u1051:
  2327     0449  2C52               	goto	l1198
  2328     044A                     u1050:
  2329     044A                     l1194:
  2330                           
  2331                           ;Main.c: 186:         if (rb1_count < 255) rb1_count++;
  2332     044A  0A7A               	incf	delay_100ms_and_poll_buttons@rb1_count,w
  2333     044B  1903               	btfsc	3,2
  2334     044C  2C4E               	goto	u1061
  2335     044D  2C4F               	goto	u1060
  2336     044E                     u1061:
  2337     044E  2C59               	goto	l1202
  2338     044F                     u1060:
  2339     044F                     l1196:
  2340     044F  3001               	movlw	1
  2341     0450  07FA               	addwf	delay_100ms_and_poll_buttons@rb1_count,f
  2342     0451  2C59               	goto	l1202
  2343     0452                     l1198:
  2344                           
  2345                           ;Main.c: 188:         if (rb1_count > 0) rb1_count--;
  2346     0452  087A               	movf	delay_100ms_and_poll_buttons@rb1_count,w
  2347     0453  1903               	btfsc	3,2
  2348     0454  2C56               	goto	u1071
  2349     0455  2C57               	goto	u1070
  2350     0456                     u1071:
  2351     0456  2C59               	goto	l1202
  2352     0457                     u1070:
  2353     0457                     l1200:
  2354     0457  3001               	movlw	1
  2355     0458  02FA               	subwf	delay_100ms_and_poll_buttons@rb1_count,f
  2356     0459                     l1202:
  2357                           
  2358                           ;Main.c: 191:     if (rb1_count >= DEBOUNCE_THRESHOLD) {
  2359     0459  3003               	movlw	3
  2360     045A  027A               	subwf	delay_100ms_and_poll_buttons@rb1_count,w
  2361     045B  1C03               	skipc
  2362     045C  2C5E               	goto	u1081
  2363     045D  2C5F               	goto	u1080
  2364     045E                     u1081:
  2365     045E  2C6A               	goto	l1210
  2366     045F                     u1080:
  2367     045F                     l1204:
  2368                           
  2369                           ;Main.c: 192:         rb1_count = 0;
  2370     045F  01FA               	clrf	delay_100ms_and_poll_buttons@rb1_count
  2371     0460                     l1206:
  2372                           
  2373                           ;Main.c: 193:         if (flag_p) *flag_p = 1;
  2374     0460  0872               	movf	delay_100ms_and_poll_buttons@flag_p,w
  2375     0461  1903               	btfsc	3,2
  2376     0462  2C64               	goto	u1091
  2377     0463  2C65               	goto	u1090
  2378     0464                     u1091:
  2379     0464  2C6A               	goto	l1210
  2380     0465                     u1090:
  2381     0465                     l1208:
  2382     0465  0872               	movf	delay_100ms_and_poll_buttons@flag_p,w
  2383     0466  0084               	movwf	4
  2384     0467  3001               	movlw	1
  2385     0468  1383               	bcf	3,7	;select IRP bank0
  2386     0469  0080               	movwf	0
  2387     046A                     l1210:
  2388                           
  2389                           ;Main.c: 196:     if (int_debounce) {
  2390     046A  087B               	movf	_int_debounce,w	;volatile
  2391     046B  1903               	btfsc	3,2
  2392     046C  2C6E               	goto	u1101
  2393     046D  2C6F               	goto	u1100
  2394     046E                     u1101:
  2395     046E  2C81               	goto	l140
  2396     046F                     u1100:
  2397     046F                     l1212:
  2398                           
  2399                           ;Main.c: 197:         static uint16_t int_deb_ctr = 0;;Main.c: 198:         int_deb_ctr+
      +                          +;
  2400     046F  3001               	movlw	1
  2401     0470  07C4               	addwf	delay_100ms_and_poll_buttons@int_deb_ctr,f
  2402     0471  1803               	skipnc
  2403     0472  0AC5               	incf	delay_100ms_and_poll_buttons@int_deb_ctr+1,f
  2404     0473  3000               	movlw	0
  2405     0474  07C5               	addwf	delay_100ms_and_poll_buttons@int_deb_ctr+1,f
  2406                           
  2407                           ;Main.c: 199:         if (int_deb_ctr > 20) {
  2408     0475  3000               	movlw	0
  2409     0476  0245               	subwf	delay_100ms_and_poll_buttons@int_deb_ctr+1,w
  2410     0477  3015               	movlw	21
  2411     0478  1903               	skipnz
  2412     0479  0244               	subwf	delay_100ms_and_poll_buttons@int_deb_ctr,w
  2413     047A  1C03               	skipc
  2414     047B  2C7D               	goto	u1111
  2415     047C  2C7E               	goto	u1110
  2416     047D                     u1111:
  2417     047D  2C81               	goto	l140
  2418     047E                     u1110:
  2419     047E                     l1214:
  2420                           
  2421                           ;Main.c: 200:             int_deb_ctr = 0;
  2422     047E  01C4               	clrf	delay_100ms_and_poll_buttons@int_deb_ctr
  2423     047F  01C5               	clrf	delay_100ms_and_poll_buttons@int_deb_ctr+1
  2424                           
  2425                           ;Main.c: 201:             int_debounce = 0;
  2426     0480  01FB               	clrf	_int_debounce	;volatile
  2427     0481                     l140:
  2428     0481  0008               	return
  2429     0482                     __end_of_delay_100ms_and_poll_buttons:
  2430                           
  2431                           	psect	text8
  2432     04C6                     __ptext8:	
  2433 ;; *************** function _isr *****************
  2434 ;; Defined at:
  2435 ;;		line 29 in file "Main.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, pclath, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2449 ;;      Params:         0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0
  2451 ;;      Temps:          2       0       0       0       0
  2452 ;;      Totals:         2       0       0       0       0
  2453 ;;Total ram usage:        2 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 1
  2456 ;; This function calls:
  2457 ;;		i1_reset_cycle_timers
  2458 ;; This function is called by:
  2459 ;;		Interrupt level 1
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463     04C6                     _isr:	
  2464                           ;psect for function _isr
  2465                           
  2466     04C6                     i1l1218:
  2467                           
  2468                           ;Main.c: 30:     if(INTF) {
  2469     04C6  1C8B               	btfss	11,1	;volatile
  2470     04C7  2CC9               	goto	u112_21
  2471     04C8  2CCA               	goto	u112_20
  2472     04C9                     u112_21:
  2473     04C9  2CE2               	goto	i1l59
  2474     04CA                     u112_20:
  2475     04CA                     i1l1220:
  2476                           
  2477                           ;Main.c: 31:         if (!int_debounce) {
  2478     04CA  087B               	movf	_int_debounce,w	;volatile
  2479     04CB  1D03               	btfss	3,2
  2480     04CC  2CCE               	goto	u113_21
  2481     04CD  2CCF               	goto	u113_20
  2482     04CE                     u113_21:
  2483     04CE  2CE1               	goto	i1l1232
  2484     04CF                     u113_20:
  2485     04CF                     i1l1222:
  2486                           
  2487                           ;Main.c: 33:             if(systemMode == MODE_AUTO) systemMode = MODE_MANUAL;
  2488     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2489     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2490     04D1  084B               	movf	_systemMode,w	;volatile
  2491     04D2  1D03               	btfss	3,2
  2492     04D3  2CD5               	goto	u114_21
  2493     04D4  2CD6               	goto	u114_20
  2494     04D5                     u114_21:
  2495     04D5  2CD9               	goto	i1l1226
  2496     04D6                     u114_20:
  2497     04D6                     i1l1224:
  2498     04D6  3001               	movlw	1
  2499     04D7  00CB               	movwf	_systemMode	;volatile
  2500     04D8  2CDA               	goto	i1l1228
  2501     04D9                     i1l1226:
  2502     04D9  01CB               	clrf	_systemMode	;volatile
  2503     04DA                     i1l1228:
  2504                           
  2505                           ;Main.c: 35:             reset_cycle_timers();
  2506     04DA  120A  118A  2511  120A  118A  	fcall	i1_reset_cycle_timers
  2507     04DF                     i1l1230:
  2508                           
  2509                           ;Main.c: 36:             int_debounce = 1;
  2510     04DF  3001               	movlw	1
  2511     04E0  00FB               	movwf	_int_debounce	;volatile
  2512     04E1                     i1l1232:
  2513                           
  2514                           ;Main.c: 38:         INTF = 0;
  2515     04E1  108B               	bcf	11,1	;volatile
  2516     04E2                     i1l59:
  2517     04E2  0871               	movf	??_isr+1,w
  2518     04E3  008A               	movwf	10
  2519     04E4  0E70               	swapf	??_isr,w
  2520     04E5  0083               	movwf	3
  2521     04E6  0EFE               	swapf	btemp,f
  2522     04E7  0E7E               	swapf	btemp,w
  2523     04E8  0009               	retfie
  2524     04E9                     __end_of_isr:
  2525                           
  2526                           	psect	intentry
  2527     0004                     __pintentry:	
  2528                           ;incstack = 0
  2529                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2530                           
  2531     0004                     interrupt_function:
  2532     007E                     saved_w         set	btemp
  2533     0004  00FE               	movwf	btemp
  2534     0005  0E03               	swapf	3,w
  2535     0006  00F0               	movwf	??_isr
  2536     0007  080A               	movf	10,w
  2537     0008  00F1               	movwf	??_isr+1
  2538     0009  120A  118A  2CC6   	ljmp	_isr
  2539                           
  2540                           	psect	text9
  2541     0511                     __ptext9:	
  2542 ;; *************** function i1_reset_cycle_timers *****************
  2543 ;; Defined at:
  2544 ;;		line 174 in file "Main.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0
  2561 ;;      Totals:         0       0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_isr
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571     0511                     i1_reset_cycle_timers:	
  2572                           ;psect for function i1_reset_cycle_timers
  2573                           
  2574     0511                     i1l1216:	
  2575                           ;incstack = 0
  2576                           ; Regs used in i1_reset_cycle_timers: [wreg]
  2577                           
  2578                           
  2579                           ;Main.c: 175:     west_timer = 20;
  2580     0511  3014               	movlw	20
  2581     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2582     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2583     0514  00C8               	movwf	_west_timer	;volatile
  2584     0515  3000               	movlw	0
  2585     0516  00C9               	movwf	_west_timer+1	;volatile
  2586                           
  2587                           ;Main.c: 176:     south_timer = 23;
  2588     0517  3017               	movlw	23
  2589     0518  00C6               	movwf	_south_timer	;volatile
  2590     0519  3000               	movlw	0
  2591     051A  00C7               	movwf	_south_timer+1	;volatile
  2592     051B                     i1l123:
  2593     051B  0008               	return
  2594     051C                     __end_ofi1_reset_cycle_timers:
  2595     0002                     ___latbits      equ	2
  2596     007E                     btemp           set	126	;btemp
  2597     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     36      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    delay_100ms_and_poll_buttons@flag_p	PTR unsigned char  size(1) Largest target is 1
		 -> main@pressed(BANK0[1]), main@pressed_162(BANK0[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _update_displays->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_update_displays

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    2609
                                             10 BANK0     26    26      0
       _delay_100ms_and_poll_buttons
                         _init_ports
                 _reset_cycle_timers
                         _set_lights
                    _update_displays
 ---------------------------------------------------------------------------------
 (1) _update_displays                                     10     6      4    1048
                                              0 BANK0     10     6      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     300
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     304
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _set_lights                                           6     1      5     179
                                              2 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (1) _reset_cycle_timers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_100ms_and_poll_buttons                         4     3      1      52
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
               i1_reset_cycle_timers
 ---------------------------------------------------------------------------------
 (4) i1_reset_cycle_timers                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_100ms_and_poll_buttons
   _init_ports
   _reset_cycle_timers
   _set_lights
   _update_displays
     ___awdiv
     ___awmod

 _isr (ROOT)
   i1_reset_cycle_timers

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     10      12     85.7%
BANK0               80     36      44     55.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      56      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Aug 25 12:49:31 2025

                                                     pc 0002  
                                                    l82 02DE  
                                                    l91 0246  
                                          ___awdiv@sign 0077  
                                                    fsr 0004  
                                                   l110 0505  
                                                   l120 04C5  
                                                   l123 0510  
                                                   l140 0481  
                                                   l117 037C  
                                                   l392 0436  
                                                   l379 03DF  
                                    _reset_cycle_timers 0506  
                                                   _GIE 005F  
                                                   u700 039C  
                                                   u701 039B  
                                                   u720 03AC  
                                                   u800 03FB  
                                                   u721 03AB  
                                                   u801 03FA  
                                                   u715 03A0  
                                                   u740 03BD  
                                                   u820 040B  
                                                   u741 03BC  
                                                   u821 040A  
                                                   u910 04A1  
                                                   u830 0415  
                                                   u911 049D  
                                                   u735 03AD  
                                                   u831 0414  
                                                   u815 03FF  
                                                   u904 0499  
                                                   u760 03D1  
                                                   u680 0382  
                                                   u761 03D0  
                                                   u745 03B9  
                                                   u681 0381  
                                                   u930 04AC  
                                                   u770 03D6  
                                                   u690 038D  
                                                   u850 0428  
                                                   u931 04A8  
                                                   u771 03D5  
                                                   u755 03C5  
                                                   u691 038C  
                                                   u851 0427  
                                                   u835 0411  
                                                   u924 04A4  
                                                   u860 042D  
                                                   u780 03E5  
                                                   u861 042C  
                                                   u845 041C  
                                                   u781 03E4  
                                                   u950 04B7  
                                                   u870 048B  
                                                   u790 03F0  
                                                   u951 04B3  
                                                   u871 0487  
                                                   u791 03EF  
                                                   u944 04AF  
                                                   u970 04C2  
                                                   u890 0496  
                                                   u971 04BE  
                                                   u891 0492  
                                                   u964 04BA  
                                                   u884 048E  
                                                   u984 04C5  
                                                   _isr 04C6  
                                                   fsr0 0004  
                                                   indf 0000  
                                          ___awmod@sign 0077  
                                       _update_displays 02E2  
                                   ?_reset_cycle_timers 0070  
                  __end_of_delay_100ms_and_poll_buttons 0482  
                          _delay_100ms_and_poll_buttons 0437  
                                                  l1100 03D6  
                                                  l1102 03DB  
                                                  l1110 03E5  
                                                  l1200 0457  
                                                  l1120 03FB  
                                                  l1112 03EA  
                                                  l1210 046A  
                                                  l1202 0459  
                                                  l1130 0415  
                                                  l1122 03FE  
                                                  l1114 03EC  
                                                  l1106 03E0  
                                                  l1212 046F  
                                                  l1204 045F  
                                                  l1140 0432  
                                                  l1132 041B  
                                                  l1124 0405  
                                                  l1116 03F0  
                                                  l1108 03E1  
                                                  l1214 047E  
                                                  l1206 0460  
                                                  l1150 04FF  
                                                  l1070 0389  
                                                  l1062 037D  
                                                  l1134 0422  
                                                  l1126 0407  
                                                  l1118 03F5  
                                                  l1208 0465  
                                                  l1152 0500  
                                                  l1144 0506  
                                                  l1160 0483  
                                                  l1080 039C  
                                                  l1072 038D  
                                                  l1064 037E  
                                                  l1128 040B  
                                                  l1136 0428  
                                                  l1154 0501  
                                                  l1146 04E9  
                                                  l1090 03BD  
                                                  l1082 039F  
                                                  l1074 0392  
                                                  l1066 0382  
                                                  l1138 042D  
                                                  l1156 0502  
                                                  l1148 04FB  
                                                  l1092 03C3  
                                                  l1084 03A6  
                                                  l1076 0394  
                                                  l1068 0387  
                                                  l1500 007C  
                                                  l1190 0437  
                                                  l1158 0503  
                                                  l1094 03C4  
                                                  l1086 03A8  
                                                  l1078 0396  
                                                  l1502 0084  
                                                  l1192 0444  
                                                  l1096 03CB  
                                                  l1088 03AC  
                                                  l1440 02E2  
                                                  l1600 01DD  
                                                  l1512 00A3  
                                                  l1504 0091  
                                                  l1194 044A  
                                                  l1098 03D1  
                                                  l1450 0303  
                                                  l1442 02E8  
                                                  l1610 0200  
                                                  l1602 01E4  
                                                  l1530 00E1  
                                                  l1522 00BE  
                                                  l1514 00AD  
                                                  l1506 009D  
                                                  l1196 044F  
                                                  l1460 033C  
                                                  l1452 0305  
                                                  l1444 02EA  
                                                  l1604 01E9  
                                                  l1540 0101  
                                                  l1532 00EE  
                                                  l1524 00C4  
                                                  l1516 00BA  
                                                  l1198 0452  
                                                  l1462 034D  
                                                  l1454 0312  
                                                  l1446 02F7  
                                                  l1622 022E  
                                                  l1614 020E  
                                                  l1606 01EE  
                                                  l1542 0107  
                                                  l1534 00FB  
                                                  l1526 00CC  
                                                  l1470 0024  
                                                  l1464 035E  
                                                  l1456 0318  
                                                  l1448 02FD  
                                                  l1640 0270  
                                                  l1624 0234  
                                                  l1616 021C  
                                                  l1608 01FA  
                                                  l1632 024B  
                                                  l1560 0145  
                                                  l1552 012E  
                                                  l1544 010F  
                                                  l1528 00D9  
                                                  l1472 0029  
                                                  l1466 036D  
                                                  l1458 032B  
                                                  l1650 0294  
                                                  l1642 0277  
                                                  l1634 0258  
                                                  l1618 0220  
                                                  l1570 0173  
                                                  l1562 0152  
                                                  l1554 0134  
                                                  l1546 011C  
                                                  l1482 0042  
                                                  l1474 0030  
                                                  l1644 027C  
                                                  l1636 0265  
                                                  l1628 023D  
                                                  l1580 019C  
                                                  l1572 017D  
                                                  l1564 015F  
                                                  l1548 0120  
                                                  l1484 0048  
                                                  l1476 003C  
                                                  l1468 001F  
                                                  l1662 02C2  
                                                  l1654 02A2  
                                                  l1646 0281  
                                                  l1638 0269  
                                                  l1582 01A2  
                                                  l1574 018A  
                                                  l1566 0165  
                                                  l1558 013D  
                                                  l1494 0061  
                                                  l1486 0050  
                                                  l1590 01B4  
                                                  l1664 02C8  
                                                  l1656 02B0  
                                                  l1672 02DA  
                                                  l1648 028E  
                                                  l1592 01B9  
                                                  l1576 018E  
                                                  l1496 0067  
                                                  l1488 005D  
                                                  l1658 02B4  
                                                  l1594 01C5  
                                                  l1586 01AB  
                                                  l1498 006F  
                                                  l1668 02D1  
                                                  l1596 01D2  
                                                  l1598 01D6  
                                                  ?_isr 0070  
                                                  u1100 046F  
                                                  u1101 046E  
                                                  u1110 047E  
                                                  u1111 047D  
                                                  u1050 044A  
                                                  u1051 0449  
                                                  u1060 044F  
                                                  u1061 044E  
                                                  u1070 0457  
                                                  u1071 0456  
                                                  u1080 045F  
                                                  u1081 045E  
                                                  u1090 0465  
                                                  u1410 0030  
                                                  u1091 0464  
                                                  u1411 002F  
                                                  u1500 01B9  
                                                  u1420 007C  
                                                  u1405 0373  
                                                  u1501 01B8  
                                                  u1421 007B  
                                                  u1350 02E8  
                                                  u1510 01E4  
                                                  u1430 0091  
                                                  u1351 02E7  
                                                  u1511 01E3  
                                                  u1431 0090  
                                                  u1360 02F7  
                                                  u1600 02C1  
                                                  u1520 01E9  
                                                  u1440 00D9  
                                                  u1361 02F6  
                                                  u1601 02C0  
                                                  u1521 01E8  
                                                  u1441 00D8  
                                                  u1425 0078  
                                                  u1370 0303  
                                                  u1530 01EE  
                                                  u1450 00EE  
                                                  u1371 0302  
                                                  u1531 01ED  
                                                  u1451 00ED  
                                                  u1435 008D  
                                                  u1380 0312  
                                                  u1540 020D  
                                                  u1460 012D  
                                                  u1381 0311  
                                                  u1365 02F3  
                                                  u1605 02BD  
                                                  u1541 020C  
                                                  u1461 012C  
                                                  u1445 00D5  
                                                  u1550 022D  
                                                  u1470 0152  
                                                  u1551 022C  
                                                  u1471 0151  
                                                  u1455 00EA  
                                                  u1560 0277  
                                                  u1480 0172  
                                                  u1617 043D  
                                                  u1385 030E  
                                                  u1561 0276  
                                                  u1545 0209  
                                                  u1481 0171  
                                                  u1465 0129  
                                                  u1570 027C  
                                                  u1490 019B  
                                                  u1395 0364  
                                                  u1571 027B  
                                                  u1555 0229  
                                                  u1491 019A  
                                                  u1475 014E  
                                                  u1580 0281  
                                                  u1581 0280  
                                                  u1485 016E  
                                                  u1590 02A1  
                                                  u1591 02A0  
                                                  u1495 0197  
                                                  u1595 029D  
                                                  _INTE 005C  
                                                  _INTF 0059  
                                                  i1l59 04E2  
                                                  _main 001F  
                                                  btemp 007E  
                                           main@pressed 003A  
                                                  start 000C  
                                           _south_timer 0046  
                                  ??_reset_cycle_timers 0072  
                                                 ??_isr 0070  
                                                 ?_main 0070  
                                       __end_of___awdiv 03E0  
                                       __end_of___awmod 0437  
                                       ___awdiv@divisor 0072  
                                                 i1l123 051B  
                                       ___awdiv@counter 0076  
                                                 _PORTA 0005  
                                                 _PORTC 0007  
                                                 _PORTD 0008  
                                                 _TRISA 0085  
                                                 _TRISB 0086  
                                                 _TRISC 0087  
                                                 _TRISD 0088  
                                                 main@k 002A  
                                                 main@s 003C  
                         ?_delay_100ms_and_poll_buttons 0072  
                                                 pclath 000A  
                                                 status 0003  
                                                 wtemp0 007E  
                                       __initialization 000F  
                                          __end_of_main 02E2  
                               __end_of_update_displays 037D  
                                                ??_main 007A  
                                      ___awdiv@dividend 0074  
                                                i1l1220 04CA  
                                                i1l1230 04DF  
                                                i1l1222 04CF  
                                                i1l1216 0511  
                                                i1l1224 04D6  
                                                i1l1232 04E1  
                                                i1l1226 04D9  
                                                i1l1218 04C6  
                                                i1l1228 04DA  
                                                u112_20 04CA  
                                                u112_21 04C9  
                                                u113_20 04CF  
                                                u113_21 04CE  
                                                u114_20 04D6  
                                                u114_21 04D5  
                                                _INTEDG 040E  
                                             ??___awdiv 0076  
                                             ??___awmod 0076  
                                      ___awdiv@quotient 0078  
                                       ___awmod@divisor 0072  
                                       ___awmod@counter 0076  
                                         _manual_active 004A  
                                                saved_w 007E  
                                 update_displays@s_ones 0027  
                                 update_displays@s_tens 0026  
                                 update_displays@w_ones 0029  
                                 update_displays@w_tens 0028  
                               __end_of__initialization 001B  
                    delay_100ms_and_poll_buttons@flag_p 0072  
                                        __pcstackCOMMON 0070  
                                      ?_update_displays 0020  
                                        _OPTION_REGbits 0081  
                                            __pbssBANK0 0044  
                                            __pmaintext 001F  
                                            __pintentry 0004  
                                            __stringtab 051C  
                                               ___awdiv 037D  
                                               ___awmod 03E0  
                                            _init_ports 04E9  
                                               __ptext1 02E2  
                                               __ptext2 03E0  
                                               __ptext3 037D  
                                               __ptext4 0482  
                                               __ptext5 0506  
                                               __ptext6 04E9  
                                               __ptext7 0437  
                                               __ptext8 04C6  
                                               __ptext9 0511  
                                      ___awmod@dividend 0074  
                 delay_100ms_and_poll_buttons@rb1_count 007A  
                                  end_of_initialization 001B  
                                            _set_lights 0482  
                                             _PORTAbits 0005  
                                             _PORTBbits 0006  
                          update_displays@south_seconds 0020  
                                            _west_timer 0048  
                                           ?_init_ports 0070  
                                   start_initialization 000F  
                                            _systemMode 004B  
                                           __end_of_isr 04E9  
                          __end_ofi1_reset_cycle_timers 051C  
                                           ?_set_lights 0072  
__end_ofdelay_100ms_and_poll_buttons@DEBOUNCE_THRESHOLD 0523  
        delay_100ms_and_poll_buttons@DEBOUNCE_THRESHOLD 0522  
                                           __pbssCOMMON 007A  
                                             ___latbits 0002  
                                         __pcstackBANK0 0020  
                                          _int_debounce 007B  
                        ??_delay_100ms_and_poll_buttons 0073  
                                              ?___awdiv 0072  
                                              ?___awmod 0072  
                                             __pstrings 051C  
               delay_100ms_and_poll_buttons@int_deb_ctr 0044  
                                     interrupt_function 0004  
                            __end_of_reset_cycle_timers 0511  
                                           __stringbase 0521  
                                             main@k_161 0032  
                                             main@k_154 002C  
                                             main@k_164 0034  
                                             main@k_156 002E  
                                             main@k_158 0030  
                                  i1_reset_cycle_timers 0511  
                                             main@s_160 0036  
                                             main@s_153 003E  
                                             main@s_155 0040  
                                             main@s_163 0038  
                                             main@s_157 0042  
                                     ??_update_displays 0024  
                                          ??_init_ports 0072  
                                 ?i1_reset_cycle_timers 0070  
                                    __end_of__stringtab 0522  
                                    __end_of_init_ports 0506  
                                          ??_set_lights 0077  
                                       main@pressed_162 003B  
                           update_displays@west_seconds 0022  
                                    __end_of_set_lights 04C6  
                                              intlevel1 0000  
                                             stringcode 051C  
                                ??i1_reset_cycle_timers 0070  
                                              stringdir 051C  
                                              stringtab 051C  
                                       set_lights@s_grn 0073  
                                       set_lights@s_red 0077  
                                       set_lights@s_yel 0072  
                                       set_lights@w_grn 0076  
                                       set_lights@w_red 0074  
                                       set_lights@w_yel 0075  
